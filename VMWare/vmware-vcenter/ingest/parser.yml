name: vmware-vcenter
pipeline:
  - name: parsed_event
    external:
      name: grok.match
      properties:
        input_field: "{{original.message}}"
        output_field: message
        pattern: "%{SESSION}"

        custom_patterns:
          SESSION_TYPE_1: "Event \[%{BASE10NUM:id}\] \[%{DATA}\] \[%{TIMESTAMP_ISO8601:timestamp}\] \[%{DATA:event_type}\] \[%{DATA:log_level}\] \[%{DATA}\] \[%{DATA}\] \[%{BASE10NUM:id_2}\] \[Cannot login %{USER:username}@%{IP:ip_address}\]"
          SESSION_TYPE_2: "Event \[%{BASE10NUM:id}\] \[%{DATA}\] \[%{TIMESTAMP_ISO8601:timestamp}\] \[%{DATA:event_type}\] \[%{DATA:log_level}\] \[%{DATA}\] \[%{DATA}\] \[%{BASE10NUM:id_2}\] \[User %{DATA}@%{IP:ip_address} logged in as %{GREEDYDATA:username}\]"
          SESSION_TYPE_3: "Event \[%{BASE10NUM:id}\] \[%{DATA:session_info}\] \[%{TIMESTAMP_ISO8601:timestamp}\] \[%{GREEDYDATA:event_type}\] \[%{WORD:log_level}\] \[%{DATA:username_1}\] \[%{DATA:hostname}\] \[%{BASE10NUM:id_2}\] \[User %{NOTSPACE:username_2} logged out \(login time: %{GREEDYDATA:login_time}, number of API invocations: %{BASE10NUM:api_invocations}, user agent: %{GREEDYDATA:user_agent}\]"
          SESSION_TYPE_4: "Event \[%{BASE10NUM:id}\] \[%{DATA:session_info}\] \[%{TIMESTAMP_ISO8601:timestamp}\] \[%{GREEDYDATA:event_type}\] \[%{WORD:log_level}\] \[%{DATA}\] \[%{DATA:hostname}\] \[%{BASE10NUM:id_2}\] \[SSH session was opened for '%{USER:username}@%{IP:ip_address}'\.\]"
          SESSION_TYPE_5: "Event \[%{BASE10NUM:id}\] \[%{DATA:session_info}\] \[%{TIMESTAMP_ISO8601:timestamp}\] \[%{GREEDYDATA:event_type}\] \[%{WORD:log_level}\] \[%{DATA}\] \[%{DATA:hostname}\] \[%{BASE10NUM:id_2}\] \[SSH session was closed for '%{USER:username_2}@%{IP:ip_address}'\.\]"
          SESSION_TYPE_6: "Event \[%{BASE10NUM:id}\] \[%{DATA:session_info}\] \[%{TIMESTAMP_ISO8601:timestamp}\] \[%{GREEDYDATA:event_type}\] \[%{WORD:log_level}\] \[%{DATA:hostname}\] \[%{DATA}\] \[%{BASE10NUM:id_2}\] \[User cannot logon since the user is %{GREEDYDATA:reason}\]"
          CONNECTIONS: "%{WORD:Event} \[%{INT:Id}\] \[1-1\] \[%{TIMESTAMP_ISO8601:Timestamp}\] \[%{DATA:event_code}\] \[%{WORD:log_level}\] \[(?:\[%{DATA}\])*\] \[%{DATA:host_name}\] \[%{INT:RepeatedId}\] \[Connected to %{HOSTNAME:source_address} in %{DATA}\]"
          FAULT: "%{TIMESTAMP_ISO8601:Timestamp} %{LOGLEVEL:log_level} %{DATA:process}\[%{DATA:process_id}\] \[%{DATA:originator_info}\] %{GREEDYDATA:reason};.*\((Fault cause: %{DATA:event_code})\\n-->"
          FAULT_TYPE_2: '%{TIMESTAMP_ISO8601:timestamp} %{WORD:log_level} %{DATA:service}\[%{DATA:service_id}\] \[%{DATA:metadata}\] \[%{DATA:process}\] -- ERROR %{DATA:error_id} -- %{DATA:component} -- %{GREEDYDATA:method_call}: %{DATA:event_code}:\\\\n--> Result:\\\\n--> \(%{DATA:result}\) \{\\\\n--> %{DATA:additional_data}\}\\\\n--> Args:\\\\n--> \\\\n--> Arg userName:\\\\n--> \\"%{DATA:username}\\"\\\\n--> Arg password:\\\\n--> \(not shown\)\\\\n--> \\\\n--> Arg locale:\\\\n--> \\"%{DATA:locale}\"'
          HTTP_LOGS_1: "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log_level} %{DATA:service}\[%{DATA:service_id}\] \[Originator@%{DATA:Originator_id} sub=%{DATA:sub}\] %{TIMESTAMP_ISO8601:datetime} %{WORD:http_method} %{URIPATH:request_path} HTTP/%{NUMBER:http_version} %{NUMBER:response_status} %{DATA:upstream_status} - %{NUMBER:size1} %{NUMBER:size2} %{NUMBER:unknown1} %{NUMBER:unknown2} %{NUMBER:unknown3} %{IP:source_ip}:%{NUMBER:client_port} %{IP:destination_ip}:%{NUMBER:server_port} %{IP:local_ip1}:%{NUMBER:local_port1} %{IP:local_ip2}:%{NUMBER:local_port2}"
          HTTP_LOGS_2: "\[%{HTTPDATE:timestamp}\] %{DATA:service} \[Request\] %{IP:client_ip}:%{NUMBER:client_port} to local %{NUMBER:destination_port} - HTTP/%{NUMBER:http_version} %{WORD:http_method} %{URIPATH:request_path} \[Response\] %{NUMBER:response_status} - %{NUMBER:response_bytes} bytes \[Perf\] process %{NUMBER:process_time}ms \/ commit %{NUMBER:commit_time}ms \/ conn \[%{DATA:conn_status}\]"
          OTHERS_EVENTS: "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} %{DATA:process}\[%{INT:pid}\] %{GREEDYDATA:ignore} -- %{GREEDYDATA:reason}"
          OTHERS_EVENTS_TYPE_2: "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} %{DATA:process}\[%{INT:pid}\] %{DATA:ignore1} %{DATA:ignore2} -- (?<reason>(.*))"
          OTHERS_EVENTS_TYPE_3: "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] %{LOGLEVEL:loglevel} %{DATA:operationID} %{DATA:process} - (?<reason>.*)"
          OTHERS_EVENTS_TYPE_4: "%{TIMESTAMP_ISO8601:timestamp}\+%{DATA}: %{DATA}: \[%{GREEDYDATA:reason}"
          OTHERS_EVENTS_TYPE_5: "%{GREEDYDATA:reason}"
          OTHERS_EVENTS_TYPE_6: "%{TIMESTAMP_ISO8601:timestamp}\] \[%{DATA:log.level}\] %{GREEDYDATA:reason}"
  - name: set_ecs_fields

stages:
  set_ecs_fields:
    actions:
      - set:
          timestamp:
          user.name:
          source.ip:
          source.port:
          destination.ip:
          source.user.name:
          user_agent.original:
          host.name:
          event.reason:
          log.level:
          http.request.method:
          url.path:
          http.response.status_code:
          http.response.bytes:
          event.category:
          event.type:

