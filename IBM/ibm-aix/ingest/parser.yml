name: ibm-aix
pipeline:
  - name: pre_parsing
    external:
      name: grok.match
      properties:
        input_field: "original.message"
        output_field: pre_message
        pattern: '%{DATA:raw_message}'


  - name: parsed_event
    external:
      name: grok.match
      properties:
        input_field: "{{pre_parsing.pre_message.raw_message}}"
        output_field: message
        pattern: '%{FILE_Link}|%{FILE_Unlink}|%{FILE_Rename}|%{USER_Login}|%{TCP_klisten}|%{TCP_kbind}|%{TCP_kaccept}|%{FS_Chroot}|%{FS_Rmdir}|%{FS_Mkdir}|%{PROC_Execute}|%{PROC_SetUserIDs}|%{PROC_SetGroups}|%{PROC_Kill}|%{PROC_LoadError}|%{PROC_RealGID}|%{PROC_Sysconfig}|%{S_PASSWD_READ}|%{S_USER_WRITE}|%{SRC_Star_Stop}|%{AUD_It}|%{AUD_Proc}|%{CRON_Start_Finish}'
        custom_patterns:
          AIX_Time: '%{MONTHDAY} %{MONTH} %{YEAR} %{TIME}'
          FILE_Link: '(filename %{DATA:file_name} )?FILE_Link %{NOTSPACE:user_name} %{NOTSPACE:user_group} %{NOTSPACE:process_user_name} OK %{AIX_Time} No associated roles( linkname %{DATA:file_target_path} filename %{NOTSPACE:file_name})?'
          FILE_Unlink: 'FILE_Unlink %{NOTSPACE:user_name} %{NOTSPACE:user_group} %{NOTSPACE:process_user_name} OK %{AIX_Time} No associated roles filename %{NOTSPACE:file_name}'
          FILE_Rename: 'FILE_Rename %{NOTSPACE:user_name} %{NOTSPACE:user_group} %{NOTSPACE:process_user_name} OK %{AIX_Time} No associated roles frompath: %{DATA:file_path} topath:%{DATA:file_name}'
          USER_Login: '(flags: 80, libpath: , file: %{DATA:file_name} )?USER_Login %{NOTSPACE:process_name} %{NOTSPACE:user_group} %{NOTSPACE:process_user_name} OK %{AIX_Time} No associated roles( user: %{NOTSPACE:user_name} tty: %{NOTSPACE:process_tty})?'
          FS_Chroot: 'FS_Chroot %{NOTSPACE:process_name} %{NOTSPACE:user_group} %{NOTSPACE:process_user_name} OK %{AIX_Time} No associated roles change root directory to: %{NOTSPACE:file_name}'
          FS_Rmdir: 'FS_Rmdir %{NOTSPACE:process_name} %{NOTSPACE:user_group} %{NOTSPACE:process_user_name} OK %{AIX_Time} No associated roles remove of directory: %{NOTSPACE:file_directory}'
          FS_Mkdir: 'FS_Mkdir %{NOTSPACE:user_name} %{NOTSPACE:user_group} %{NOTSPACE:process_user_name} OK %{AIX_Time} No associated roles mode: 755 dir: %{NOTSPACE:file_directory}'
          PROC_Execute: 'PROC_Execute %{NOTSPACE:process_name} %{NOTSPACE:user_group} %{NOTSPACE:process_user_name} OK %{AIX_Time} No associated roles euid: %{INT:user_id} egid: %{INT:group_id} epriv: %{BASE16NUM}:%{BASE16NUM} name %{NOTSPACE:process_name} %{NOTSPACE:file_name}( -H -S -p \[sudo via ansible, key=hhototo\] password: -u root %{NOTSPACE:process_name} -c echo BECOME-SUCCESS-hhototo; LANG=C LC_CTYPE=C %{DATA})?'
          PROC_Kill: 'PROC_Kill %{NOTSPACE:process_name} %{NOTSPACE:process_user_name} %{NOTSPACE:user_group} OK %{AIX_Time} No associated roles pid: %{NUMBER:process_pid}, sig: %{NUMBER}'
          PROC_LoadError: 'PROC_LoadError %{NOTSPACE:process_name} %{NOTSPACE:process_user_name} %{NOTSPACE:user_group} FAIL %{AIX_Time} No associated roles flags: 80, libpath: , file: %{DATA:file_name}%{DATA}'
          PROC_RealGID: 'PROC_RealGID %{NOTSPACE:process_name} %{NOTSPACE:process_user_name} %{NOTSPACE:user_group} OK %{AIX_Time} No associated roles old rgid: %{NUMBER}, new gid: %{NUMBER}, which: egid'
          PROC_SetUserIDs: 'PROC_SetUserIDs %{NOTSPACE:process_name} %{NOTSPACE:process_user_name} %{NOTSPACE:user_group} OK %{AIX_Time} No associated roles effect: %{NUMBER}, real: %{NUMBER}, saved: %{NUMBER}, login: %{NUMBER}'
          PROC_SetGroups: 'PROC_SetGroups %{NOTSPACE:process_name} %{NOTSPACE:process_user_name} %{NOTSPACE:user_group} OK %{AIX_Time} No associated roles group set: %{DATA}'
          PROC_Sysconfig: 'PROC_Sysconfig %{NOTSPACE:process_name} %{NOTSPACE:process_user_name} %{NOTSPACE:user_group} OK %{AIX_Time} No associated roles %{INT}'
          S_PASSWD_READ: 'S_PASSWD_READ %{NOTSPACE:user_name} %{NOTSPACE:user_group} %{NOTSPACE:process_user_name} OK %{AIX_Time} No associated roles audit object read event detected %{NOTSPACE:file_name}'
          AUD_It: 'AUD_It %{NOTSPACE:user_name} %{NOTSPACE:user_group} %{NOTSPACE:process_user_name} OK %{AIX_Time} No associated roles%{DATA}'
          AUD_Proc: 'AUD_Proc %{NOTSPACE:process_name} %{NOTSPACE:user_group} %{NOTSPACE:process_user_name} OK %{AIX_Time} No associated roles pid: %{NUMBER:process_pid} cmd: %{NUMBER}'
          S_USER_WRITE: 'S_USER_WRITE %{NOTSPACE:process_name} %{NOTSPACE:user_name} %{NOTSPACE:user_group} OK %{AIX_Time} No associated roles audit object write event detected %{NOTSPACE:file_name}'
          SRC_Star_Stop: '(SRC_Start|SRC_Stop) %{NOTSPACE:process_name} %{NOTSPACE:process_user_name} %{NOTSPACE:user_group} OK %{AIX_Time} No associated roles %{NOTSPACE:file_name}'
          CRON_Start_Finish: '(CRON_Start|CRON_Finish) %{NOTSPACE:process_name} %{NOTSPACE:process_user_name} %{NOTSPACE:user_group} OK %{AIX_Time} No associated roles (event = start cron job cmd = %{DATA:process_command_line}|user = %{DATA} pid = %{NUMBER:process_pid}) time = %{DAY} %{MONTH} %{MONTHDAY} %{TIME} %{YEAR}'
          TCP_klisten: 'TCP_klisten %{NOTSPACE:user_name} %{NOTSPACE:user_group} %{NOTSPACE:process_user_name} OK %{AIX_Time} 0 fd15 qlimit 1'
          TCP_kbind: 'TCP_kbind %{NOTSPACE:user_name} %{NOTSPACE:user_group} %{NOTSPACE:process_user_name} OK %{AIX_Time} No associated roles %{BASE16NUM} %{DATA:file_name}'
          TCP_kaccept: 'TCP_kaccept %{NOTSPACE:user_name} %{NOTSPACE:user_group} %{NOTSPACE:process_user_name} OK %{AIX_Time} No associated roles %{BASE16NUM} Port %{IP:source_ip} %{INT:source_port} kx5frsip01-a nimaux'

# Regarder process.tty en beta pour le champ tty 
  - name: set_common_fields
  - name: set_ecs_fields
  # - name: set_ecs_fields_from_condition

stages:
  set_common_fields:
    actions:
      - set:
          action.target: "process"
          event.code: '{{pre_parsing.pre_message.message_number_grok}}'
          event.kind: 'event'
          event.category: ['process']
          observer.vendor: 'IBM'
          
  set_ecs_fields:
    actions:
      - set:
          '@timestamp': '{{pre_parsing.pre_message.timestamp}}'
          action.name: '{{parsed_event.message.action_name|lower }}'

          destination.bytes: '{{parsed_event.message.server_to_client_bytes}}'
          destination.domain: '{{parsed_event.message.destination_host or parsed_event.message.requested_host }}'
          destination.ip: '{{parsed_event.message.destination_ip}}'
          destination.port: '{{parsed_event.message.destination_port}}'
          destination.nat.ip: '{{parsed_event.message.destination_nat_ip}}'
          destination.nat.port: '{{parsed_event.message.destination_nat_port}}'
          event.action: '{{parsed_event.message.result}}'
          event.reason: '{{parsed_event.message.block_reason}}'
          file.name: '{{parsed_event.message.file_name}}'
          file.directory: '{{parsed_event.message.file_directory}}'
          file.path: '{{parsed_event.message.file_path}}'
          file.target_path: '{{parsed_event.message.file_target_path}}'
          host.name: '{{parsed_event.message.client_system_name}}'
          http.request.bytes: '{{parsed_event.message.source_bytes}}'
          http.request.method: '{{parse_first_line.message.http_method or parsed_event.message.http_action}}'
          http.request.mime_type: '{{parsed_event.message.media_type}}'
          http.response.bytes: '{{parsed_event.message.destination_bytes}}'
          http.response.status_code: '{{parsed_event.message.http_status_code}}'
          network.direction: '{{parsed_event.message.network_direction}}'
          network.transport: '{{parsed_event.message.network_transport}}'
          observer.hostname: '{{parsed_event.message.hostname}}'
          process.name: '{{parsed_event.message.process_name}}'
          process.tty: '{{parsed_event.message.process_tty}}'
          process.pid: '{{parsed_event.message.process_pid}}'
          process.user.name: '{{parsed_event.message.process_user_name}}'
          process.parent.name: '{{parsed_event.message.process_parent_name}}'
          process.command_line: '{{parsed_event.message.process_command_line}}'
          rule.category: '{{parsed_event.message.category}}'
          rule.name: '{{parsed_event.message.rule_name or parsed_event.message.last_rule}}'
          rule.ruleset: '{{parsed_event.message.ruleset_name}}'
          source.bytes: '{{parsed_event.message.client_to_server_bytes}}'
          source.ip:  '{{parsed_event.message.source_ip}}'
          source.port:  '{{parsed_event.message.source_port}}'
          source.nat.ip:  '{{parsed_event.message.source_nat_ip}}'
          source.nat.port:  '{{parsed_event.message.source_nat_port}}'
          url.original: '{{parsed_event.message.uri}}'
          url.path: '{{parsed_event.message.requested_path}}'
          url.scheme: '{{parsed_event.message.uri_scheme}}'

          group.name: '{{parsed_event.message.user_group}}'
          group.id: '{{parsed_event.message.group_id}}'
          user.name: '{{parsed_event.message.user_name}}'
          user.id: '{{parsed_event.message.user_id}}'

          
  # set_ecs_fields_from_condition:
  #   actions:
  #   # ideas from https://gist.github.com/adriansr/902dea2b92f1ea8624714c1bc97a3c78
  #     - set: 
  #         event.action: 'intrusion-detected'
  #         event.category: ['intrusion_detection']
  #       filter: '{{pre_parsing.pre_message.message_number_grok == "430001"}}'
  #     - set: 
  #         event.action: 'connection-started'
  #         event.category: ['network']
  #         event.type: ['connection', 'start']
  #       filter: '{{pre_parsing.pre_message.message_number_grok == "430002"}}'

  #     - set: 
  #         event.action: 'malware-detected'
  #         event.kind: 'alert'
  #         event.category: ['malware']
  #         event.type: ['info']
  #       filter: '{{pre_parsing.pre_message.message_number_grok == "430005"}}'
  #     - set:
  #         network.transport: '{{parsed_event.message.network_transport|lower }}'
  #       filter: '{{parsed_event.message.get("network_transport") != None}}'
  #     - translate:
  #       dictionary:
  #           'ASA': 'Adaptive Security Appliance'
  #           'FTD': 'Firepower Threat Defense'
  #           'NGIPS': 'Secure IPS'
  #       mapping:
  #         pre_parsing.pre_message.product: observer.product
