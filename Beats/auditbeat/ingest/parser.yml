name: auditbeat
pipeline:
  - name: json_event
    external:
      name: json.parse-json
  - name: rename_Auditd-fields
  - name: rename_Beat-fields
  - name: rename_Cloud-provider-metadata-fields
  - name: rename_Common-fields
  - name: rename_Docker-fields
    filter: "{{json_event.message.docker != null}}"
  - name: rename_ECS-fields
  - name: rename_File-Integrity-fields
  - name: rename_Host-fields
    filter: "{{json_event.message.host != null}}"
  - name: rename_Jolokia-Discovery-autodiscover-provider-fields
  - name: rename_Kubernetes-fields
  - name: rename_Process-fields
  - name: mutate_Process-fields
  - name: rename_System-fields

stages:
  rename_Auditd-fields:
    actions:
      - set: 
          user.audit.id: "{{json_event.message.user.auid}}" 
          user.id: "{{json_event.message.user.uid}}" 
          user.filesystem.id: "{{json_event.message.user.fsuid}}" 
          auditd.user.saved.id: "{{json_event.message.user.suid}}" 
          auditd.user.group.id: "{{json_event.message.user.gid}}" 
          user.saved.group.id: "{{json_event.message.user.sgid}}" 
          user.filesystem.group.id: "{{json_event.message.user.fsgid}}" 
        # These are the fields generated by the auditd module.

      - set: 
          user.audit.name: "{{json_event.message.user.name_map.auid}}" 
          user.name: "{{json_event.message.user.name_map.uid}}" 
          user.filesystem.name: "{{json_event.message.user.name_map.fsuid}}" 
          auditd.user.saved.name: "{{json_event.message.user.name_map.suid}}" 
          user.group.name: "{{json_event.message.user.name_map.gid}}" 
          auditd.user.saved.group.name: "{{json_event.message.user.name_map.sgid}}" 
          user.filesystem.group.name: "{{json_event.message.user.name_map.fsgid}}" 
        # If `resolve_ids` is set to true in the configuration then `name_map` will contain a mapping of uid field names to the resolved name (e.g. auid -> root).
        filter: "{{json_event.message.name_map != null}}"

      - set: 
          user.selinux.user: "{{json_event.message.user.selinux.user}}" 
          user.selinux.role: "{{json_event.message.user.selinux.role}}" 
          user.selinux.domain: "{{json_event.message.user.selinux.domain}}" 
          user.selinux.level: "{{json_event.message.user.selinux.level}}" 
          user.selinux.category: "{{json_event.message.user.selinux.category}}" 
        # The SELinux identity of the actor.
        filter: "{{json_event.message.selinux != null}}"

      - set: 
          process.working_directory: "{{json_event.message.process.cwd}}" 
        # Process attributes.
        filter: "{{json_event.message.process != null}}"

      - set: 
          source.path: "{{json_event.message.source.path}}" 
        # Source that triggered the event.
        filter: "{{json_event.message.source != null}}"

      - set: 
          destination.path: "{{json_event.message.destination.path}}" 
          auditd.message_type: "{{json_event.message.auditd.message_type}}" 
          auditd.sequence: "{{json_event.message.auditd.sequence}}" 
          auditd.session: "{{json_event.message.auditd.session}}" 
          auditd.result: "{{json_event.message.auditd.result}}" 
        # Destination address that triggered the event.
        filter: "{{json_event.message.destination != null}}"

      - set: 
          auditd.summary.actor.primary: "{{json_event.message.auditd.summary.actor.primary}}" 
          auditd.summary.actor.secondary: "{{json_event.message.auditd.summary.actor.secondary}}" 
        # The actor is the user that triggered the audit event.
        filter: "{{json_event.message.actor != null}}"

      - set: 
          auditd.summary.object.type: "{{json_event.message.auditd.summary.object.type}}" 
          auditd.summary.object.primary: "{{json_event.message.auditd.summary.object.primary}}" 
          auditd.summary.object.secondary: "{{json_event.message.auditd.summary.object.secondary}}" 
          auditd.summary.how: "{{json_event.message.auditd.summary.how}}" 
        # This is the thing or object being acted upon in the event.
        filter: "{{json_event.message.object != null}}"

      - set: 
          auditd.paths.inode: "{{json_event.message.auditd.paths.inode}}" 
          auditd.paths.dev: "{{json_event.message.auditd.paths.dev}}" 
          auditd.paths.obj_user: "{{json_event.message.auditd.paths.obj_user}}" 
          auditd.paths.obj_role: "{{json_event.message.auditd.paths.obj_role}}" 
          auditd.paths.obj_domain: "{{json_event.message.auditd.paths.obj_domain}}" 
          auditd.paths.obj_level: "{{json_event.message.auditd.paths.obj_level}}" 
          auditd.paths.objtype: "{{json_event.message.auditd.paths.objtype}}" 
          auditd.paths.ouid: "{{json_event.message.auditd.paths.ouid}}" 
          auditd.paths.rdev: "{{json_event.message.auditd.paths.rdev}}" 
          auditd.paths.nametype: "{{json_event.message.auditd.paths.nametype}}" 
          auditd.paths.ogid: "{{json_event.message.auditd.paths.ogid}}" 
          auditd.paths.item: "{{json_event.message.auditd.paths.item}}" 
          auditd.paths.mode: "{{json_event.message.auditd.paths.mode}}" 
          auditd.paths.name: "{{json_event.message.auditd.paths.name}}" 
        # List of paths associated with the event.
        filter: "{{json_event.message.paths != null}}"

      - set: 
          auditd.data.action: "{{json_event.message.auditd.data.action}}" 
          auditd.data.minor: "{{json_event.message.auditd.data.minor}}" 
          auditd.data.acct: "{{json_event.message.auditd.data.acct}}" 
          auditd.data.addr: "{{json_event.message.auditd.data.addr}}" 
          auditd.data.cipher: "{{json_event.message.auditd.data.cipher}}" 
          auditd.data.id: "{{json_event.message.auditd.data.id}}" 
          auditd.data.entries: "{{json_event.message.auditd.data.entries}}" 
          auditd.data.kind: "{{json_event.message.auditd.data.kind}}" 
          auditd.data.ksize: "{{json_event.message.auditd.data.ksize}}" 
          auditd.data.spid: "{{json_event.message.auditd.data.spid}}" 
          auditd.data.arch: "{{json_event.message.auditd.data.arch}}" 
          auditd.data.argc: "{{json_event.message.auditd.data.argc}}" 
          auditd.data.major: "{{json_event.message.auditd.data.major}}" 
          auditd.data.unit: "{{json_event.message.auditd.data.unit}}" 
          auditd.data.table: "{{json_event.message.auditd.data.table}}" 
          auditd.data.terminal: "{{json_event.message.auditd.data.terminal}}" 
          auditd.data.grantors: "{{json_event.message.auditd.data.grantors}}" 
          auditd.data.direction: "{{json_event.message.auditd.data.direction}}" 
          auditd.data.op: "{{json_event.message.auditd.data.op}}" 
          auditd.data.tty: "{{json_event.message.auditd.data.tty}}" 
          auditd.data.syscall: "{{json_event.message.auditd.data.syscall}}" 
          auditd.data.data: "{{json_event.message.auditd.data.data}}" 
          auditd.data.family: "{{json_event.message.auditd.data.family}}" 
          auditd.data.mac: "{{json_event.message.auditd.data.mac}}" 
          auditd.data.pfs: "{{json_event.message.auditd.data.pfs}}" 
          auditd.data.items: "{{json_event.message.auditd.data.items}}" 
          auditd.data.a0: "{{json_event.message.auditd.data.a0}}" 
          auditd.data.a1: "{{json_event.message.auditd.data.a1}}" 
          auditd.data.a2: "{{json_event.message.auditd.data.a2}}" 
          auditd.data.a3: "{{json_event.message.auditd.data.a3}}" 
          auditd.data.hostname: "{{json_event.message.auditd.data.hostname}}" 
          auditd.data.lport: "{{json_event.message.auditd.data.lport}}" 
          auditd.data.rport: "{{json_event.message.auditd.data.rport}}" 
          auditd.data.exit: "{{json_event.message.auditd.data.exit}}" 
          auditd.data.fp: "{{json_event.message.auditd.data.fp}}" 
          auditd.data.laddr: "{{json_event.message.auditd.data.laddr}}" 
          auditd.data.sport: "{{json_event.message.auditd.data.sport}}" 
          auditd.data.capability: "{{json_event.message.auditd.data.capability}}" 
          auditd.data.nargs: "{{json_event.message.auditd.data.nargs}}" 
          auditd.data.new-enabled: "{{json_event.message.auditd.data.new-enabled}}" 
          auditd.data.audit_backlog_limit: "{{json_event.message.auditd.data.audit_backlog_limit}}" 
          auditd.data.dir: "{{json_event.message.auditd.data.dir}}" 
          auditd.data.cap_pe: "{{json_event.message.auditd.data.cap_pe}}" 
          auditd.data.model: "{{json_event.message.auditd.data.model}}" 
          auditd.data.new_pp: "{{json_event.message.auditd.data.new_pp}}" 
          auditd.data.old-enabled: "{{json_event.message.auditd.data.old-enabled}}" 
          auditd.data.oauid: "{{json_event.message.auditd.data.oauid}}" 
          auditd.data.old: "{{json_event.message.auditd.data.old}}" 
          auditd.data.banners: "{{json_event.message.auditd.data.banners}}" 
          auditd.data.feature: "{{json_event.message.auditd.data.feature}}" 
          auditd.data.vm-ctx: "{{json_event.message.auditd.data.vm-ctx}}" 
          auditd.data.opid: "{{json_event.message.auditd.data.opid}}" 
          auditd.data.seperms: "{{json_event.message.auditd.data.seperms}}" 
          auditd.data.seresult: "{{json_event.message.auditd.data.seresult}}" 
          auditd.data.new-rng: "{{json_event.message.auditd.data.new-rng}}" 
          auditd.data.old-net: "{{json_event.message.auditd.data.old-net}}" 
          auditd.data.sigev_signo: "{{json_event.message.auditd.data.sigev_signo}}" 
          auditd.data.ino: "{{json_event.message.auditd.data.ino}}" 
          auditd.data.old_enforcing: "{{json_event.message.auditd.data.old_enforcing}}" 
          auditd.data.old-vcpu: "{{json_event.message.auditd.data.old-vcpu}}" 
          auditd.data.range: "{{json_event.message.auditd.data.range}}" 
          auditd.data.res: "{{json_event.message.auditd.data.res}}" 
          auditd.data.added: "{{json_event.message.auditd.data.added}}" 
          auditd.data.fam: "{{json_event.message.auditd.data.fam}}" 
          auditd.data.nlnk-pid: "{{json_event.message.auditd.data.nlnk-pid}}" 
          auditd.data.subj: "{{json_event.message.auditd.data.subj}}" 
          auditd.data.a[0-3]: "{{json_event.message.auditd.data.a[0-3]}}" 
          auditd.data.cgroup: "{{json_event.message.auditd.data.cgroup}}" 
          auditd.data.kernel: "{{json_event.message.auditd.data.kernel}}" 
          auditd.data.ocomm: "{{json_event.message.auditd.data.ocomm}}" 
          auditd.data.new-net: "{{json_event.message.auditd.data.new-net}}" 
          auditd.data.permissive: "{{json_event.message.auditd.data.permissive}}" 
          auditd.data.class: "{{json_event.message.auditd.data.class}}" 
          auditd.data.compat: "{{json_event.message.auditd.data.compat}}" 
          auditd.data.fi: "{{json_event.message.auditd.data.fi}}" 
          auditd.data.changed: "{{json_event.message.auditd.data.changed}}" 
          auditd.data.msg: "{{json_event.message.auditd.data.msg}}" 
          auditd.data.dport: "{{json_event.message.auditd.data.dport}}" 
          auditd.data.new-seuser: "{{json_event.message.auditd.data.new-seuser}}" 
          auditd.data.invalid_context: "{{json_event.message.auditd.data.invalid_context}}" 
          auditd.data.dmac: "{{json_event.message.auditd.data.dmac}}" 
          auditd.data.ipx-net: "{{json_event.message.auditd.data.ipx-net}}" 
          auditd.data.iuid: "{{json_event.message.auditd.data.iuid}}" 
          auditd.data.macproto: "{{json_event.message.auditd.data.macproto}}" 
          auditd.data.obj: "{{json_event.message.auditd.data.obj}}" 
          auditd.data.ipid: "{{json_event.message.auditd.data.ipid}}" 
          auditd.data.new-fs: "{{json_event.message.auditd.data.new-fs}}" 
          auditd.data.vm-pid: "{{json_event.message.auditd.data.vm-pid}}" 
          auditd.data.cap_pi: "{{json_event.message.auditd.data.cap_pi}}" 
          auditd.data.old-auid: "{{json_event.message.auditd.data.old-auid}}" 
          auditd.data.oses: "{{json_event.message.auditd.data.oses}}" 
          auditd.data.fd: "{{json_event.message.auditd.data.fd}}" 
          auditd.data.igid: "{{json_event.message.auditd.data.igid}}" 
          auditd.data.new-disk: "{{json_event.message.auditd.data.new-disk}}" 
          auditd.data.parent: "{{json_event.message.auditd.data.parent}}" 
          auditd.data.len: "{{json_event.message.auditd.data.len}}" 
          auditd.data.oflag: "{{json_event.message.auditd.data.oflag}}" 
          auditd.data.uuid: "{{json_event.message.auditd.data.uuid}}" 
          auditd.data.code: "{{json_event.message.auditd.data.code}}" 
          auditd.data.nlnk-grp: "{{json_event.message.auditd.data.nlnk-grp}}" 
          auditd.data.cap_fp: "{{json_event.message.auditd.data.cap_fp}}" 
          auditd.data.new-mem: "{{json_event.message.auditd.data.new-mem}}" 
          auditd.data.seperm: "{{json_event.message.auditd.data.seperm}}" 
          auditd.data.enforcing: "{{json_event.message.auditd.data.enforcing}}" 
          auditd.data.new-chardev: "{{json_event.message.auditd.data.new-chardev}}" 
          auditd.data.old-rng: "{{json_event.message.auditd.data.old-rng}}" 
          auditd.data.outif: "{{json_event.message.auditd.data.outif}}" 
          auditd.data.cmd: "{{json_event.message.auditd.data.cmd}}" 
          auditd.data.hook: "{{json_event.message.auditd.data.hook}}" 
          auditd.data.new-level: "{{json_event.message.auditd.data.new-level}}" 
          auditd.data.sauid: "{{json_event.message.auditd.data.sauid}}" 
          auditd.data.sig: "{{json_event.message.auditd.data.sig}}" 
          auditd.data.audit_backlog_wait_time: "{{json_event.message.auditd.data.audit_backlog_wait_time}}" 
          auditd.data.printer: "{{json_event.message.auditd.data.printer}}" 
          auditd.data.old-mem: "{{json_event.message.auditd.data.old-mem}}" 
          auditd.data.perm: "{{json_event.message.auditd.data.perm}}" 
          auditd.data.old_pi: "{{json_event.message.auditd.data.old_pi}}" 
          auditd.data.state: "{{json_event.message.auditd.data.state}}" 
          auditd.data.format: "{{json_event.message.auditd.data.format}}" 
          auditd.data.new_gid: "{{json_event.message.auditd.data.new_gid}}" 
          auditd.data.tcontext: "{{json_event.message.auditd.data.tcontext}}" 
          auditd.data.maj: "{{json_event.message.auditd.data.maj}}" 
          auditd.data.watch: "{{json_event.message.auditd.data.watch}}" 
          auditd.data.device: "{{json_event.message.auditd.data.device}}" 
          auditd.data.grp: "{{json_event.message.auditd.data.grp}}" 
          auditd.data.bool: "{{json_event.message.auditd.data.bool}}" 
          auditd.data.icmp_type: "{{json_event.message.auditd.data.icmp_type}}" 
          auditd.data.new_lock: "{{json_event.message.auditd.data.new_lock}}" 
          auditd.data.old_prom: "{{json_event.message.auditd.data.old_prom}}" 
          auditd.data.acl: "{{json_event.message.auditd.data.acl}}" 
          auditd.data.ip: "{{json_event.message.auditd.data.ip}}" 
          auditd.data.new_pi: "{{json_event.message.auditd.data.new_pi}}" 
          auditd.data.default-context: "{{json_event.message.auditd.data.default-context}}" 
          auditd.data.inode_gid: "{{json_event.message.auditd.data.inode_gid}}" 
          auditd.data.new-log_passwd: "{{json_event.message.auditd.data.new-log_passwd}}" 
          auditd.data.new_pe: "{{json_event.message.auditd.data.new_pe}}" 
          auditd.data.selected-context: "{{json_event.message.auditd.data.selected-context}}" 
          auditd.data.cap_fver: "{{json_event.message.auditd.data.cap_fver}}" 
          auditd.data.file: "{{json_event.message.auditd.data.file}}" 
          auditd.data.net: "{{json_event.message.auditd.data.net}}" 
          auditd.data.virt: "{{json_event.message.auditd.data.virt}}" 
          auditd.data.cap_pp: "{{json_event.message.auditd.data.cap_pp}}" 
          auditd.data.old-range: "{{json_event.message.auditd.data.old-range}}" 
          auditd.data.resrc: "{{json_event.message.auditd.data.resrc}}" 
          auditd.data.new-range: "{{json_event.message.auditd.data.new-range}}" 
          auditd.data.obj_gid: "{{json_event.message.auditd.data.obj_gid}}" 
          auditd.data.proto: "{{json_event.message.auditd.data.proto}}" 
          auditd.data.old-disk: "{{json_event.message.auditd.data.old-disk}}" 
          auditd.data.audit_failure: "{{json_event.message.auditd.data.audit_failure}}" 
          auditd.data.inif: "{{json_event.message.auditd.data.inif}}" 
          auditd.data.vm: "{{json_event.message.auditd.data.vm}}" 
          auditd.data.flags: "{{json_event.message.auditd.data.flags}}" 
          auditd.data.nlnk-fam: "{{json_event.message.auditd.data.nlnk-fam}}" 
          auditd.data.old-fs: "{{json_event.message.auditd.data.old-fs}}" 
          auditd.data.old-ses: "{{json_event.message.auditd.data.old-ses}}" 
          auditd.data.seqno: "{{json_event.message.auditd.data.seqno}}" 
          auditd.data.fver: "{{json_event.message.auditd.data.fver}}" 
          auditd.data.qbytes: "{{json_event.message.auditd.data.qbytes}}" 
          auditd.data.seuser: "{{json_event.message.auditd.data.seuser}}" 
          auditd.data.cap_fe: "{{json_event.message.auditd.data.cap_fe}}" 
          auditd.data.new-vcpu: "{{json_event.message.auditd.data.new-vcpu}}" 
          auditd.data.old-level: "{{json_event.message.auditd.data.old-level}}" 
          auditd.data.old_pp: "{{json_event.message.auditd.data.old_pp}}" 
          auditd.data.daddr: "{{json_event.message.auditd.data.daddr}}" 
          auditd.data.old-role: "{{json_event.message.auditd.data.old-role}}" 
          auditd.data.ioctlcmd: "{{json_event.message.auditd.data.ioctlcmd}}" 
          auditd.data.smac: "{{json_event.message.auditd.data.smac}}" 
          auditd.data.apparmor: "{{json_event.message.auditd.data.apparmor}}" 
          auditd.data.fe: "{{json_event.message.auditd.data.fe}}" 
          auditd.data.perm_mask: "{{json_event.message.auditd.data.perm_mask}}" 
          auditd.data.ses: "{{json_event.message.auditd.data.ses}}" 
          auditd.data.cap_fi: "{{json_event.message.auditd.data.cap_fi}}" 
          auditd.data.obj_uid: "{{json_event.message.auditd.data.obj_uid}}" 
          auditd.data.reason: "{{json_event.message.auditd.data.reason}}" 
          auditd.data.list: "{{json_event.message.auditd.data.list}}" 
          auditd.data.old_lock: "{{json_event.message.auditd.data.old_lock}}" 
          auditd.data.bus: "{{json_event.message.auditd.data.bus}}" 
          auditd.data.old_pe: "{{json_event.message.auditd.data.old_pe}}" 
          auditd.data.new-role: "{{json_event.message.auditd.data.new-role}}" 
          auditd.data.prom: "{{json_event.message.auditd.data.prom}}" 
          auditd.data.uri: "{{json_event.message.auditd.data.uri}}" 
          auditd.data.audit_enabled: "{{json_event.message.auditd.data.audit_enabled}}" 
          auditd.data.old-log_passwd: "{{json_event.message.auditd.data.old-log_passwd}}" 
          auditd.data.old-seuser: "{{json_event.message.auditd.data.old-seuser}}" 
          auditd.data.per: "{{json_event.message.auditd.data.per}}" 
          auditd.data.scontext: "{{json_event.message.auditd.data.scontext}}" 
          auditd.data.tclass: "{{json_event.message.auditd.data.tclass}}" 
          auditd.data.ver: "{{json_event.message.auditd.data.ver}}" 
          auditd.data.new: "{{json_event.message.auditd.data.new}}" 
          auditd.data.val: "{{json_event.message.auditd.data.val}}" 
          auditd.data.img-ctx: "{{json_event.message.auditd.data.img-ctx}}" 
          auditd.data.old-chardev: "{{json_event.message.auditd.data.old-chardev}}" 
          auditd.data.old_val: "{{json_event.message.auditd.data.old_val}}" 
          auditd.data.success: "{{json_event.message.auditd.data.success}}" 
          auditd.data.inode_uid: "{{json_event.message.auditd.data.inode_uid}}" 
          auditd.data.removed: "{{json_event.message.auditd.data.removed}}" 
          auditd.data.socket.port: "{{json_event.message.auditd.data.socket.port}}" 
          auditd.data.socket.saddr: "{{json_event.message.auditd.data.socket.saddr}}" 
          auditd.data.socket.addr: "{{json_event.message.auditd.data.socket.addr}}" 
          auditd.data.socket.family: "{{json_event.message.auditd.data.socket.family}}" 
          auditd.data.socket.path: "{{json_event.message.auditd.data.socket.path}}" 
          auditbeat.event.original: "{{json_event.message.auditd.messages}}" 
          error.message: "{{json_event.message.auditd.warnings}}" 
        # The data from the audit messages.
        filter: "{{json_event.message.data != null}}"

      - set: 
          geoip.continent_name: "{{json_event.message.geoip.continent_name}}" 
          geoip.city_name: "{{json_event.message.geoip.city_name}}" 
          geoip.region_name: "{{json_event.message.geoip.region_name}}" 
          geoip.country_iso_code: "{{json_event.message.geoip.country_iso_code}}" 
          geoip.location: "{{json_event.message.geoip.location}}" 
        # The geoip fields are defined as a convenience in case you decide to enrich the data using a geoip filter in Logstash or Ingest Node.
        filter: "{{json_event.message.geoip != null}}"

  rename_Beat-fields:
    actions:
      - set:
          agent.hostname: "{{json_event.message.agent.hostname}}"  
          
          auditbeat.timezone: "{{json_event.message.beat.timezone}}" 
          fields: "{{json_event.message.fields}}" 
          host.name: "{{json_event.message.beat.name}}" 
          timeseries.instance: "{{json_event.message.timeseries.instance}}" 
        # Contains common beat fields available in all event types.

      - set:
          agent.hostname: "{{json_event.message.beat.hostname}}" 
        filter: "{{json_event.message.beat!=null and json_event.message.beat.hostname!=null}}"

  rename_Cloud-provider-metadata-fields:
    actions:
      - set: 
          cloud.image.id: "{{json_event.message.cloud.image.id}}" 
          cloud.provider: "{{json_event.message.meta.cloud.provider}}" 
          cloud.instance.id: "{{json_event.message.meta.cloud.instance_id}}" 
          cloud.instance.name: "{{json_event.message.meta.cloud.instance_name}}" 
          cloud.machine.type: "{{json_event.message.meta.cloud.machine_type}}" 
          cloud.availability_zone: "{{json_event.message.meta.cloud.availability_zone}}" 
          cloud.project.id: "{{json_event.message.meta.cloud.project_id}}" 
          cloud.region: "{{json_event.message.meta.cloud.region}}" 
        # Metadata from cloud providers added by the add_cloud_metadata processor.

  rename_Common-fields:
    actions:
      - set: 
          file.setuid: "{{json_event.message.file.setuid}}" 
          file.setgid: "{{json_event.message.file.setgid}}" 
          file.origin: "{{json_event.message.file.origin}}" 
          file.origin.text: "{{json_event.message.file.origin.text}}" 
        # File attributes.
        filter: "{{json_event.message.file != null}}"

      - set: 
          file.selinux.user: "{{json_event.message.file.selinux.user}}" 
          file.selinux.role: "{{json_event.message.file.selinux.role}}" 
          file.selinux.domain: "{{json_event.message.file.selinux.domain}}" 
          file.selinux.level: "{{json_event.message.file.selinux.level}}" 
        # The SELinux identity of the file.
        filter: "{{json_event.message.selinux != null}}"

      - set: 
          user.audit.id: "{{json_event.message.user.audit.id}}" 
          user.audit.name: "{{json_event.message.user.audit.name}}" 
        # Audit user information.
        filter: "{{json_event.message.audit != null}}"

      - set: 
          user.filesystem.id: "{{json_event.message.user.filesystem.id}}" 
          user.filesystem.name: "{{json_event.message.user.filesystem.name}}" 
        # Filesystem user information.
        filter: "{{json_event.message.user != null and json_event.message.user.filesystem != null}}"

      - set: 
          user.filesystem.group.id: "{{json_event.message.user.filesystem.group.id}}" 
          user.filesystem.group.name: "{{json_event.message.user.filesystem.group.name}}" 
        # Filesystem group information.
        filter: "{{json_event.message.user != null and json_event.message.user.group != null}}"

      - set: 
          auditd.user.saved.id: "{{json_event.message.user.saved.id}}" 
          auditd.user.saved.name: "{{json_event.message.user.saved.name}}" 
        # Saved user information.
        filter: "{{json_event.message.user != null and json_event.message.user.saved != null}}"

      - set: 
          auditd.user.saved.group.id: "{{json_event.message.user.saved.group.id}}" 
          auditd.user.saved.group.name: "{{json_event.message.user.saved.group.name}}" 
        # Saved group information.
        filter: "{{json_event.message.user != null and json_event.message.user.group != null}}"

  rename_Docker-fields:
    actions:
      - set: 
          container.id: "{{json_event.message.docker.container.id}}" 
          container.image.name: "{{json_event.message.docker.container.image}}" 
          container.name: "{{json_event.message.docker.container.name}}" 
          docker.container.labels: "{{json_event.message.docker.container.labels}}" 
        # Docker stats collected from Docker.

  rename_ECS-fields:
    actions:
      - set: 
          auditbeat.labels: "{{json_event.message.labels}}" 
          auditbeat.message: "{{json_event.message.message}}" 
          auditbeat.tags: "{{json_event.message.tags}}" 
        # This section defines Elastic Common Schema (ECS) fields—a common set of fields

      - set: 
          agent.build.original: "{{json_event.message.agent.build.original}}" 
          agent.ephemeral_id: "{{json_event.message.agent.ephemeral_id}}" 
          agent.id: "{{json_event.message.agent.id}}" 
          agent.name: "{{json_event.message.agent.name}}" 
          agent.type: "{{json_event.message.agent.type}}" 
          agent.version: "{{json_event.message.agent.version}}" 
        # The agent fields contain the data about the software entity, if any, that collects, detects, or observes events on a host, or takes measurements on a host.
        filter: "{{json_event.message.agent != null}}"

      - set: 
          as.number: "{{json_event.message.as.number}}" 
          as.organization.name: "{{json_event.message.as.organization.name}}" 
          as.organization.name.text: "{{json_event.message.as.organization.name.text}}" 
        # An autonomous system (AS) is a collection of connected Internet Protocol (IP) routing prefixes under the control of one or more network operators on behalf of a single administrative entity or domain that presents a common, clearly defined routing policy to the internet.
        filter: "{{json_event.message.as != null}}"

      - set: 
          client.address: "{{json_event.message.client.address}}" 
          client.as.number: "{{json_event.message.client.as.number}}" 
          client.as.organization.name: "{{json_event.message.client.as.organization.name}}" 
          client.as.organization.name.text: "{{json_event.message.client.as.organization.name.text}}" 
          client.bytes: "{{json_event.message.client.bytes}}" 
          client.domain: "{{json_event.message.client.domain}}" 
          client.geo.city_name: "{{json_event.message.client.geo.city_name}}" 
          client.geo.continent_code: "{{json_event.message.client.geo.continent_code}}" 
          client.geo.continent_name: "{{json_event.message.client.geo.continent_name}}" 
          client.geo.country_iso_code: "{{json_event.message.client.geo.country_iso_code}}" 
          client.geo.country_name: "{{json_event.message.client.geo.country_name}}" 
          client.geo.location: "{{json_event.message.client.geo.location}}" 
          client.geo.name: "{{json_event.message.client.geo.name}}" 
          client.geo.postal_code: "{{json_event.message.client.geo.postal_code}}" 
          client.geo.region_iso_code: "{{json_event.message.client.geo.region_iso_code}}" 
          client.geo.region_name: "{{json_event.message.client.geo.region_name}}" 
          client.geo.timezone: "{{json_event.message.client.geo.timezone}}" 
          client.ip: "{{json_event.message.client.ip}}" 
          client.mac: "{{json_event.message.client.mac}}" 
          client.nat.ip: "{{json_event.message.client.nat.ip}}" 
          client.nat.port: "{{json_event.message.client.nat.port}}" 
          client.packets: "{{json_event.message.client.packets}}" 
          client.port: "{{json_event.message.client.port}}" 
          client.registered_domain: "{{json_event.message.client.registered_domain}}" 
          client.subdomain: "{{json_event.message.client.subdomain}}" 
          client.top_level_domain: "{{json_event.message.client.top_level_domain}}" 
          client.user.domain: "{{json_event.message.client.user.domain}}" 
          client.user.email: "{{json_event.message.client.user.email}}" 
          client.user.full_name: "{{json_event.message.client.user.full_name}}" 
          client.user.full_name.text: "{{json_event.message.client.user.full_name.text}}" 
          client.user.group.domain: "{{json_event.message.client.user.group.domain}}" 
          client.user.group.id: "{{json_event.message.client.user.group.id}}" 
          client.user.group.name: "{{json_event.message.client.user.group.name}}" 
          client.user.hash: "{{json_event.message.client.user.hash}}" 
          client.user.id: "{{json_event.message.client.user.id}}" 
          client.user.name: "{{json_event.message.client.user.name}}" 
          client.user.name.text: "{{json_event.message.client.user.name.text}}" 
          client.user.roles: "{{json_event.message.client.user.roles}}" 
        # A client is defined as the initiator of a network connection for events regarding sessions, connections, or bidirectional flow records.
        filter: "{{json_event.message.client != null}}"

      - set: 
          cloud.account.id: "{{json_event.message.cloud.account.id}}" 
          cloud.account.name: "{{json_event.message.cloud.account.name}}" 
          cloud.availability_zone: "{{json_event.message.cloud.availability_zone}}" 
          cloud.instance.id: "{{json_event.message.cloud.instance.id}}" 
          cloud.instance.name: "{{json_event.message.cloud.instance.name}}" 
          cloud.machine.type: "{{json_event.message.cloud.machine.type}}" 
          cloud.project.id: "{{json_event.message.cloud.project.id}}" 
          cloud.project.name: "{{json_event.message.cloud.project.name}}" 
          cloud.provider: "{{json_event.message.cloud.provider}}" 
          cloud.region: "{{json_event.message.cloud.region}}" 
          cloud.service.name: "{{json_event.message.cloud.service.name}}" 
        # Fields related to the cloud or infrastructure the events are coming from.
        filter: "{{json_event.message.cloud != null}}"

      - set: 
          code_signature.exists: "{{json_event.message.code_signature.exists}}" 
          code_signature.signing_id: "{{json_event.message.code_signature.signing_id}}" 
          code_signature.status: "{{json_event.message.code_signature.status}}" 
          code_signature.subject_name: "{{json_event.message.code_signature.subject_name}}" 
          code_signature.team_id: "{{json_event.message.code_signature.team_id}}" 
          code_signature.trusted: "{{json_event.message.code_signature.trusted}}" 
          code_signature.valid: "{{json_event.message.code_signature.valid}}" 
        # Fields related to the cloud or infrastructure the events are coming from.
        filter: "{{json_event.message.code_signature != null}}"

      - set: 
          container.id: "{{json_event.message.container.id}}" 
          container.image.name: "{{json_event.message.container.image.name}}" 
          container.image.tag: "{{json_event.message.container.image.tag}}" 
          container.labels: "{{json_event.message.container.labels}}" 
          container.name: "{{json_event.message.container.name}}" 
          container.runtime: "{{json_event.message.container.runtime}}" 
        # Container fields are used for meta information about the specific container that is the source of information.
        filter: "{{json_event.message.container != null}}"

      - set: 
          data_stream.dataset: "{{json_event.message.data_stream.dataset}}" 
          data_stream.namespace: "{{json_event.message.data_stream.namespace}}" 
          data_stream.type: "{{json_event.message.data_stream.type}}" 
        #The data_stream fields take part in defining the new data stream naming scheme.
        filter: "{{json_event.message.data_stream != null}}"

      - set: 
          destination.address: "{{json_event.message.destination.address}}" 
          destination.as.number: "{{json_event.message.destination.as.number}}" 
          destination.as.organization.name: "{{json_event.message.destination.as.organization.name}}" 
          destination.as.organization.name.text: "{{json_event.message.destination.as.organization.name.text}}" 
          destination.bytes: "{{json_event.message.destination.bytes}}" 
          destination.domain: "{{json_event.message.destination.domain}}" 
          destination.geo.city_name: "{{json_event.message.destination.geo.city_name}}" 
          destination.geo.continent_code: "{{json_event.message.destination.geo.continent_code}}" 
          destination.geo.continent_name: "{{json_event.message.destination.geo.continent_name}}" 
          destination.geo.country_iso_code: "{{json_event.message.destination.geo.country_iso_code}}" 
          destination.geo.country_name: "{{json_event.message.destination.geo.country_name}}" 
          destination.geo.location: "{{json_event.message.destination.geo.location}}" 
          destination.geo.name: "{{json_event.message.destination.geo.name}}" 
          destination.geo.postal_code: "{{json_event.message.destination.geo.postal_code}}" 
          destination.geo.region_iso_code: "{{json_event.message.destination.geo.region_iso_code}}" 
          destination.geo.region_name: "{{json_event.message.destination.geo.region_name}}" 
          destination.geo.timezone: "{{json_event.message.destination.geo.timezone}}" 
          destination.ip: "{{json_event.message.destination.ip}}" 
          destination.mac: "{{json_event.message.destination.mac}}" 
          destination.nat.ip: "{{json_event.message.destination.nat.ip}}" 
          destination.nat.port: "{{json_event.message.destination.nat.port}}" 
          destination.packets: "{{json_event.message.destination.packets}}" 
          destination.port: "{{json_event.message.destination.port}}" 
          destination.registered_domain: "{{json_event.message.destination.registered_domain}}" 
          destination.subdomain: "{{json_event.message.destination.subdomain}}" 
          destination.top_level_domain: "{{json_event.message.destination.top_level_domain}}" 
          destination.user.domain: "{{json_event.message.destination.user.domain}}" 
          destination.user.email: "{{json_event.message.destination.user.email}}" 
          destination.user.full_name: "{{json_event.message.destination.user.full_name}}" 
          destination.user.full_name.text: "{{json_event.message.destination.user.full_name.text}}" 
          destination.user.group.domain: "{{json_event.message.destination.user.group.domain}}" 
          destination.user.group.id: "{{json_event.message.destination.user.group.id}}" 
          destination.user.group.name: "{{json_event.message.destination.user.group.name}}" 
          destination.user.hash: "{{json_event.message.destination.user.hash}}" 
          destination.user.id: "{{json_event.message.destination.user.id}}" 
          destination.user.name: "{{json_event.message.destination.user.name}}" 
          destination.user.name.text: "{{json_event.message.destination.user.name.text}}" 
          destination.user.roles: "{{json_event.message.destination.user.roles}}" 
        # Destination fields capture details about the receiver of a network exchange/packet. These fields are populated from a network event, packet, or other event containing details of a network transaction.
        filter: "{{json_event.message.destination != null}}"

      - set: 
          dll.code_signature.exists: "{{json_event.message.dll.code_signature.exists}}" 
          dll.code_signature.signing_id: "{{json_event.message.dll.code_signature.signing_id}}" 
          dll.code_signature.status: "{{json_event.message.dll.code_signature.status}}" 
          dll.code_signature.subject_name: "{{json_event.message.dll.code_signature.subject_name}}" 
          dll.code_signature.team_id: "{{json_event.message.dll.code_signature.team_id}}" 
          dll.code_signature.trusted: "{{json_event.message.dll.code_signature.trusted}}" 
          dll.code_signature.valid: "{{json_event.message.dll.code_signature.valid}}" 
          dll.hash.md5: "{{json_event.message.dll.hash.md5}}" 
          dll.hash.sha1: "{{json_event.message.dll.hash.sha1}}" 
          dll.hash.sha256: "{{json_event.message.dll.hash.sha256}}" 
          dll.hash.sha512: "{{json_event.message.dll.hash.sha512}}" 
          dll.hash.ssdeep: "{{json_event.message.dll.hash.ssdeep}}" 
          dll.name: "{{json_event.message.dll.name}}" 
          dll.path: "{{json_event.message.dll.path}}" 
          dll.pe.architecture: "{{json_event.message.dll.pe.architecture}}" 
          dll.pe.company: "{{json_event.message.dll.pe.company}}" 
          dll.pe.description: "{{json_event.message.dll.pe.description}}" 
          dll.pe.file_version: "{{json_event.message.dll.pe.file_version}}" 
          dll.pe.imphash: "{{json_event.message.dll.pe.imphash}}" 
          dll.pe.original_file_name: "{{json_event.message.dll.pe.original_file_name}}" 
          dll.pe.product: "{{json_event.message.dll.pe.product}}" 
        # These fields contain information about code libraries dynamically loaded into processes.
        filter: "{{json_event.message.dll != null}}"

      - set: 
          dns.answers: "{{json_event.message.dns.answers}}" 
          dns.answers.class: "{{json_event.message.dns.answers.class}}" 
          dns.answers.data: "{{json_event.message.dns.answers.data}}" 
          dns.answers.name: "{{json_event.message.dns.answers.name}}" 
          dns.answers.ttl: "{{json_event.message.dns.answers.ttl}}" 
          dns.answers.type: "{{json_event.message.dns.answers.type}}" 
          dns.header_flags: "{{json_event.message.dns.header_flags}}" 
          dns.id: "{{json_event.message.dns.id}}" 
          dns.op_code: "{{json_event.message.dns.op_code}}" 
          dns.question.class: "{{json_event.message.dns.question.class}}" 
          dns.question.name: "{{json_event.message.dns.question.name}}" 
          dns.question.registered_domain: "{{json_event.message.dns.question.registered_domain}}" 
          dns.question.subdomain: "{{json_event.message.dns.question.subdomain}}" 
          dns.question.top_level_domain: "{{json_event.message.dns.question.top_level_domain}}" 
          dns.question.type: "{{json_event.message.dns.question.type}}" 
          dns.resolved_ip: "{{json_event.message.dns.resolved_ip}}" 
          dns.response_code: "{{json_event.message.dns.response_code}}" 
          dns.type: "{{json_event.message.dns.type}}" 
        # Fields describing DNS queries and answers.
        filter: "{{json_event.message.dns != null}}"

      - set: 
          ecs.version: "{{json_event.message.ecs.version}}" 
        # Meta-information specific to ECS.
        filter: "{{json_event.message.ecs != null}}"

      - set: 
          error.code: "{{json_event.message.error.code}}" 
          error.id: "{{json_event.message.error.id}}" 
          error.message: "{{json_event.message.error.message}}" 
          error.stack_trace: "{{json_event.message.error.stack_trace}}" 
          error.stack_trace.text: "{{json_event.message.error.stack_trace.text}}" 
          error.type: "{{json_event.message.error.type}}" 
        # These fields can represent errors of any kind.
        filter: "{{json_event.message.error != null}}"

      - set: 
          event.action: "{{json_event.message.event.action}}" 
          event.category: "{{json_event.message.event.category}}" 
          event.code: "{{json_event.message.event.code}}" 
          event.created: "{{json_event.message.event.created}}" 
          event.dataset: "{{json_event.message.event.dataset}}" 
          event.duration: "{{json_event.message.event.duration}}" 
          event.end: "{{json_event.message.event.end}}" 
          event.hash: "{{json_event.message.event.hash}}" 
          event.id: "{{json_event.message.event.id}}" 
          event.ingested: "{{json_event.message.event.ingested}}" 
          event.kind: "{{json_event.message.event.kind}}" 
          event.module: "{{json_event.message.event.module}}" 
          event.original: "{{json_event.message.event.original}}" 
          event.outcome: "{{json_event.message.event.outcome}}" 
          event.provider: "{{json_event.message.event.provider}}" 
          event.reason: "{{json_event.message.event.reason}}" 
          event.reference: "{{json_event.message.event.reference}}" 
          event.risk_score: "{{json_event.message.event.risk_score}}" 
          event.risk_score_norm: "{{json_event.message.event.risk_score_norm}}" 
          event.sequence: "{{json_event.message.event.sequence}}" 
          event.severity: "{{json_event.message.event.severity}}" 
          event.start: "{{json_event.message.event.start}}" 
          event.timezone: "{{json_event.message.event.timezone}}" 
          event.type: "{{json_event.message.event.type}}" 
          event.url: "{{json_event.message.event.url}}" 
        # The event fields are used for context information about the log or metric event itself.
        filter: "{{json_event.message.event != null}}"

      - set: 
          file.accessed: "{{json_event.message.file.accessed}}" 
          file.attributes: "{{json_event.message.file.attributes}}" 
          file.code_signature.exists: "{{json_event.message.file.code_signature.exists}}" 
          file.code_signature.signing_id: "{{json_event.message.file.code_signature.signing_id}}" 
          file.code_signature.status: "{{json_event.message.file.code_signature.status}}" 
          file.code_signature.subject_name: "{{json_event.message.file.code_signature.subject_name}}" 
          file.code_signature.team_id: "{{json_event.message.file.code_signature.team_id}}" 
          file.code_signature.trusted: "{{json_event.message.file.code_signature.trusted}}" 
          file.code_signature.valid: "{{json_event.message.file.code_signature.valid}}" 
          file.created: "{{json_event.message.file.created}}" 
          file.ctime: "{{json_event.message.file.ctime}}" 
          file.device: "{{json_event.message.file.device}}" 
          file.directory: "{{json_event.message.file.directory}}" 
          file.drive_letter: "{{json_event.message.file.drive_letter}}" 
          file.extension: "{{json_event.message.file.extension}}" 
          file.gid: "{{json_event.message.file.gid}}" 
          file.group: "{{json_event.message.file.group}}" 
          file.hash.md5: "{{json_event.message.file.hash.md5}}" 
          file.hash.sha1: "{{json_event.message.file.hash.sha1}}" 
          file.hash.sha256: "{{json_event.message.file.hash.sha256}}" 
          file.hash.sha512: "{{json_event.message.file.hash.sha512}}" 
          file.hash.ssdeep: "{{json_event.message.file.hash.ssdeep}}" 
          file.inode: "{{json_event.message.file.inode}}" 
          file.mime_type: "{{json_event.message.file.mime_type}}" 
          file.mode: "{{json_event.message.file.mode}}" 
          file.mtime: "{{json_event.message.file.mtime}}" 
          file.name: "{{json_event.message.file.name}}" 
          file.owner: "{{json_event.message.file.owner}}" 
          file.path: "{{json_event.message.file.path}}" 
          file.path.text: "{{json_event.message.file.path.text}}" 
          file.pe.architecture: "{{json_event.message.file.pe.architecture}}" 
          file.pe.company: "{{json_event.message.file.pe.company}}" 
          file.pe.description: "{{json_event.message.file.pe.description}}" 
          file.pe.file_version: "{{json_event.message.file.pe.file_version}}" 
          file.pe.imphash: "{{json_event.message.file.pe.imphash}}" 
          file.pe.original_file_name: "{{json_event.message.file.pe.original_file_name}}" 
          file.pe.product: "{{json_event.message.file.pe.product}}" 
          file.size: "{{json_event.message.file.size}}" 
          file.target_path: "{{json_event.message.file.target_path}}" 
          file.target_path.text: "{{json_event.message.file.target_path.text}}" 
          file.type: "{{json_event.message.file.type}}" 
          file.uid: "{{json_event.message.file.uid}}" 
          file.x509.alternative_names: "{{json_event.message.file.x509.alternative_names}}" 
          file.x509.issuer.common_name: "{{json_event.message.file.x509.issuer.common_name}}" 
          file.x509.issuer.country: "{{json_event.message.file.x509.issuer.country}}" 
          file.x509.issuer.distinguished_name: "{{json_event.message.file.x509.issuer.distinguished_name}}" 
          file.x509.issuer.locality: "{{json_event.message.file.x509.issuer.locality}}" 
          file.x509.issuer.organization: "{{json_event.message.file.x509.issuer.organization}}" 
          file.x509.issuer.organizational_unit: "{{json_event.message.file.x509.issuer.organizational_unit}}" 
          file.x509.issuer.state_or_province: "{{json_event.message.file.x509.issuer.state_or_province}}" 
          file.x509.not_after: "{{json_event.message.file.x509.not_after}}" 
          file.x509.not_before: "{{json_event.message.file.x509.not_before}}" 
          file.x509.public_key_algorithm: "{{json_event.message.file.x509.public_key_algorithm}}" 
          file.x509.public_key_curve: "{{json_event.message.file.x509.public_key_curve}}" 
          file.x509.public_key_exponent: "{{json_event.message.file.x509.public_key_exponent}}" 
          file.x509.public_key_size: "{{json_event.message.file.x509.public_key_size}}" 
          file.x509.serial_number: "{{json_event.message.file.x509.serial_number}}" 
          file.x509.signature_algorithm: "{{json_event.message.file.x509.signature_algorithm}}" 
          file.x509.subject.common_name: "{{json_event.message.file.x509.subject.common_name}}" 
          file.x509.subject.country: "{{json_event.message.file.x509.subject.country}}" 
          file.x509.subject.distinguished_name: "{{json_event.message.file.x509.subject.distinguished_name}}" 
          file.x509.subject.locality: "{{json_event.message.file.x509.subject.locality}}" 
          file.x509.subject.organization: "{{json_event.message.file.x509.subject.organization}}" 
          file.x509.subject.organizational_unit: "{{json_event.message.file.x509.subject.organizational_unit}}" 
          file.x509.subject.state_or_province: "{{json_event.message.file.x509.subject.state_or_province}}" 
          file.x509.version_number: "{{json_event.message.file.x509.version_number}}" 
        # A file is defined as a set of information that has been created on, or has existed on a filesystem.
        filter: "{{json_event.message.file != null}}"

      - set: 
          geo.city_name: "{{json_event.message.geo.city_name}}" 
          geo.continent_code: "{{json_event.message.geo.continent_code}}" 
          geo.continent_name: "{{json_event.message.geo.continent_name}}" 
          geo.country_iso_code: "{{json_event.message.geo.country_iso_code}}" 
          geo.country_name: "{{json_event.message.geo.country_name}}" 
          geo.location: "{{json_event.message.geo.location}}" 
          geo.name: "{{json_event.message.geo.name}}" 
          geo.postal_code: "{{json_event.message.geo.postal_code}}" 
          geo.region_iso_code: "{{json_event.message.geo.region_iso_code}}" 
          geo.region_name: "{{json_event.message.geo.region_name}}" 
          geo.timezone: "{{json_event.message.geo.timezone}}" 
        # Geo fields can carry data about a specific location related to an event.
        filter: "{{json_event.message.geo != null}}"

      - set: 
          group.domain: "{{json_event.message.group.domain}}" 
          group.id: "{{json_event.message.group.id}}" 
          group.name: "{{json_event.message.group.name}}" 
        # The group fields are meant to represent groups that are relevant to the event.
        filter: "{{json_event.message.group != null}}"

      - set: 
          hash.md5: "{{json_event.message.hash.md5}}" 
          hash.sha1: "{{json_event.message.hash.sha1}}" 
          hash.sha256: "{{json_event.message.hash.sha256}}" 
          hash.sha512: "{{json_event.message.hash.sha512}}" 
          hash.ssdeep: "{{json_event.message.hash.ssdeep}}" 
        # The hash fields represent different bitwise hash algorithms and their values.
        filter: "{{json_event.message.hash != null}}"

      - set: 
          host.architecture: "{{json_event.message.host.architecture}}" 
          host.cpu.usage: "{{json_event.message.host.cpu.usage}}" 
          host.disk.read.bytes: "{{json_event.message.host.disk.read.bytes}}" 
          host.disk.write.bytes: "{{json_event.message.host.disk.write.bytes}}" 
          host.domain: "{{json_event.message.host.domain}}" 
          host.geo.city_name: "{{json_event.message.host.geo.city_name}}" 
          host.geo.continent_code: "{{json_event.message.host.geo.continent_code}}" 
          host.geo.continent_name: "{{json_event.message.host.geo.continent_name}}" 
          host.geo.country_iso_code: "{{json_event.message.host.geo.country_iso_code}}" 
          host.geo.country_name: "{{json_event.message.host.geo.country_name}}" 
          host.geo.location: "{{json_event.message.host.geo.location}}" 
          host.geo.name: "{{json_event.message.host.geo.name}}" 
          host.geo.postal_code: "{{json_event.message.host.geo.postal_code}}" 
          host.geo.region_iso_code: "{{json_event.message.host.geo.region_iso_code}}" 
          host.geo.region_name: "{{json_event.message.host.geo.region_name}}" 
          host.geo.timezone: "{{json_event.message.host.geo.timezone}}" 
          host.hostname: "{{json_event.message.host.hostname}}" 
          host.id: "{{json_event.message.host.id}}" 
          host.ip: "{{json_event.message.host.ip}}" 
          host.mac: "{{json_event.message.host.mac}}" 
          host.name: "{{json_event.message.host.name}}" 
          host.network.egress.bytes: "{{json_event.message.host.network.egress.bytes}}" 
          host.network.egress.packets: "{{json_event.message.host.network.egress.packets}}" 
          host.network.ingress.bytes: "{{json_event.message.host.network.ingress.bytes}}" 
          host.network.ingress.packets: "{{json_event.message.host.network.ingress.packets}}" 
          host.os.family: "{{json_event.message.host.os.family}}" 
          host.os.full: "{{json_event.message.host.os.full}}" 
          host.os.full.text: "{{json_event.message.host.os.full.text}}" 
          host.os.kernel: "{{json_event.message.host.os.kernel}}" 
          host.os.name: "{{json_event.message.host.os.name}}" 
          host.os.name.text: "{{json_event.message.host.os.name.text}}" 
          host.os.platform: "{{json_event.message.host.os.platform}}" 
          host.os.type: "{{json_event.message.host.os.type}}" 
          host.os.version: "{{json_event.message.host.os.version}}" 
          host.type: "{{json_event.message.host.type}}" 
          host.uptime: "{{json_event.message.host.uptime}}" 
          host.user.domain: "{{json_event.message.host.user.domain}}" 
          host.user.email: "{{json_event.message.host.user.email}}" 
          host.user.full_name: "{{json_event.message.host.user.full_name}}" 
          host.user.full_name.text: "{{json_event.message.host.user.full_name.text}}" 
          host.user.group.domain: "{{json_event.message.host.user.group.domain}}" 
          host.user.group.id: "{{json_event.message.host.user.group.id}}" 
          host.user.group.name: "{{json_event.message.host.user.group.name}}" 
          host.user.hash: "{{json_event.message.host.user.hash}}" 
          host.user.id: "{{json_event.message.host.user.id}}" 
          host.user.name: "{{json_event.message.host.user.name}}" 
          host.user.name.text: "{{json_event.message.host.user.name.text}}" 
          host.user.roles: "{{json_event.message.host.user.roles}}" 
        # A host is defined as a general computing instance.
        filter: "{{json_event.message.host != null}}"

      - set: 
          http.request.body.bytes: "{{json_event.message.http.request.body.bytes}}" 
          http.request.body.content: "{{json_event.message.http.request.body.content}}" 
          http.request.body.content.text: "{{json_event.message.http.request.body.content.text}}" 
          http.request.bytes: "{{json_event.message.http.request.bytes}}" 
          http.request.id: "{{json_event.message.http.request.id}}" 
          http.request.method: "{{json_event.message.http.request.method}}" 
          http.request.mime_type: "{{json_event.message.http.request.mime_type}}" 
          http.request.referrer: "{{json_event.message.http.request.referrer}}" 
          http.response.body.bytes: "{{json_event.message.http.response.body.bytes}}" 
          http.response.body.content: "{{json_event.message.http.response.body.content}}" 
          http.response.body.content.text: "{{json_event.message.http.response.body.content.text}}" 
          http.response.bytes: "{{json_event.message.http.response.bytes}}" 
          http.response.mime_type: "{{json_event.message.http.response.mime_type}}" 
          http.response.status_code: "{{json_event.message.http.response.status_code}}" 
          http.version: "{{json_event.message.http.version}}" 
        # Fields related to HTTP activity. Use the `url` field set to store the url of the request.
        filter: "{{json_event.message.http != null}}"

      - set: 
          interface.alias: "{{json_event.message.interface.alias}}" 
          interface.id: "{{json_event.message.interface.id}}" 
          interface.name: "{{json_event.message.interface.name}}" 
        # The interface fields are used to record ingress and egress interface information when reported by an observer (e.g. firewall, router, load balancer) in the context of the observer handling a network connection.
        filter: "{{json_event.message.interface != null}}"

      - set: 
          log.file.path: "{{json_event.message.log.file.path}}" 
          log.level: "{{json_event.message.log.level}}" 
          log.logger: "{{json_event.message.log.logger}}" 
          log.origin.file.line: "{{json_event.message.log.origin.file.line}}" 
          log.origin.file.name: "{{json_event.message.log.origin.file.name}}" 
          log.origin.function: "{{json_event.message.log.origin.function}}" 
          log.original: "{{json_event.message.log.original}}" 
          log.syslog: "{{json_event.message.log.syslog}}" 
          log.syslog.facility.code: "{{json_event.message.log.syslog.facility.code}}" 
          log.syslog.facility.name: "{{json_event.message.log.syslog.facility.name}}" 
          log.syslog.priority: "{{json_event.message.log.syslog.priority}}" 
          log.syslog.severity.code: "{{json_event.message.log.syslog.severity.code}}" 
          log.syslog.severity.name: "{{json_event.message.log.syslog.severity.name}}" 
        # Details about the event's logging mechanism or logging transport.
        filter: "{{json_event.message.log != null}}"

      - set: 
          network.application: "{{json_event.message.network.application}}" 
          network.bytes: "{{json_event.message.network.bytes}}" 
          network.community_id: "{{json_event.message.network.community_id}}" 
          network.direction: "{{json_event.message.network.direction}}" 
          network.forwarded_ip: "{{json_event.message.network.forwarded_ip}}" 
          network.iana_number: "{{json_event.message.network.iana_number}}" 
          network.inner: "{{json_event.message.network.inner}}" 
          network.inner.vlan.id: "{{json_event.message.network.inner.vlan.id}}" 
          network.inner.vlan.name: "{{json_event.message.network.inner.vlan.name}}" 
          network.name: "{{json_event.message.network.name}}" 
          network.packets: "{{json_event.message.network.packets}}" 
          network.protocol: "{{json_event.message.network.protocol}}" 
          network.transport: "{{json_event.message.network.transport}}" 
          network.type: "{{json_event.message.network.type}}" 
          network.vlan.id: "{{json_event.message.network.vlan.id}}" 
          network.vlan.name: "{{json_event.message.network.vlan.name}}" 
        # The network is defined as the communication path over which a host or network event happens.
        filter: "{{json_event.message.network != null}}"

      - set: 
          observer.egress: "{{json_event.message.observer.egress}}" 
          observer.egress.interface.alias: "{{json_event.message.observer.egress.interface.alias}}" 
          observer.egress.interface.id: "{{json_event.message.observer.egress.interface.id}}" 
          observer.egress.interface.name: "{{json_event.message.observer.egress.interface.name}}" 
          observer.egress.vlan.id: "{{json_event.message.observer.egress.vlan.id}}" 
          observer.egress.vlan.name: "{{json_event.message.observer.egress.vlan.name}}" 
          observer.egress.zone: "{{json_event.message.observer.egress.zone}}" 
          observer.geo.city_name: "{{json_event.message.observer.geo.city_name}}" 
          observer.geo.continent_code: "{{json_event.message.observer.geo.continent_code}}" 
          observer.geo.continent_name: "{{json_event.message.observer.geo.continent_name}}" 
          observer.geo.country_iso_code: "{{json_event.message.observer.geo.country_iso_code}}" 
          observer.geo.country_name: "{{json_event.message.observer.geo.country_name}}" 
          observer.geo.location: "{{json_event.message.observer.geo.location}}" 
          observer.geo.name: "{{json_event.message.observer.geo.name}}" 
          observer.geo.postal_code: "{{json_event.message.observer.geo.postal_code}}" 
          observer.geo.region_iso_code: "{{json_event.message.observer.geo.region_iso_code}}" 
          observer.geo.region_name: "{{json_event.message.observer.geo.region_name}}" 
          observer.geo.timezone: "{{json_event.message.observer.geo.timezone}}" 
          observer.hostname: "{{json_event.message.observer.hostname}}" 
          observer.ingress: "{{json_event.message.observer.ingress}}" 
          observer.ingress.interface.alias: "{{json_event.message.observer.ingress.interface.alias}}" 
          observer.ingress.interface.id: "{{json_event.message.observer.ingress.interface.id}}" 
          observer.ingress.interface.name: "{{json_event.message.observer.ingress.interface.name}}" 
          observer.ingress.vlan.id: "{{json_event.message.observer.ingress.vlan.id}}" 
          observer.ingress.vlan.name: "{{json_event.message.observer.ingress.vlan.name}}" 
          observer.ingress.zone: "{{json_event.message.observer.ingress.zone}}" 
          observer.ip: "{{json_event.message.observer.ip}}" 
          observer.mac: "{{json_event.message.observer.mac}}" 
          observer.name: "{{json_event.message.observer.name}}" 
          observer.os.family: "{{json_event.message.observer.os.family}}" 
          observer.os.full: "{{json_event.message.observer.os.full}}" 
          observer.os.full.text: "{{json_event.message.observer.os.full.text}}" 
          observer.os.kernel: "{{json_event.message.observer.os.kernel}}" 
          observer.os.name: "{{json_event.message.observer.os.name}}" 
          observer.os.name.text: "{{json_event.message.observer.os.name.text}}" 
          observer.os.platform: "{{json_event.message.observer.os.platform}}" 
          observer.os.type: "{{json_event.message.observer.os.type}}" 
          observer.os.version: "{{json_event.message.observer.os.version}}" 
          observer.product: "{{json_event.message.observer.product}}" 
          observer.serial_number: "{{json_event.message.observer.serial_number}}" 
          observer.type: "{{json_event.message.observer.type}}" 
          observer.vendor: "{{json_event.message.observer.vendor}}" 
          observer.version: "{{json_event.message.observer.version}}" 
        # An observer is defined as a special network, security, or application device used to detect, observe, or create network, security, or application-related events and metrics.
        filter: "{{json_event.message.observer != null}}"

      - set: 
          orchestrator.api_version: "{{json_event.message.orchestrator.api_version}}" 
          orchestrator.cluster.name: "{{json_event.message.orchestrator.cluster.name}}" 
          orchestrator.cluster.url: "{{json_event.message.orchestrator.cluster.url}}" 
          orchestrator.cluster.version: "{{json_event.message.orchestrator.cluster.version}}" 
          orchestrator.namespace: "{{json_event.message.orchestrator.namespace}}" 
          orchestrator.organization: "{{json_event.message.orchestrator.organization}}" 
          orchestrator.resource.name: "{{json_event.message.orchestrator.resource.name}}" 
          orchestrator.resource.type: "{{json_event.message.orchestrator.resource.type}}" 
          orchestrator.type: "{{json_event.message.orchestrator.type}}" 
        # Fields that describe the resources which container orchestrators manage or act upon.
        filter: "{{json_event.message.orchestrator != null}}"

      - set: 
          organization.id: "{{json_event.message.organization.id}}" 
          organization.name: "{{json_event.message.organization.name}}" 
          organization.name.text: "{{json_event.message.organization.name.text}}" 
        # The organization fields enrich data with information about the company or entity the data is associated with.
        filter: "{{json_event.message.organization != null}}"

      - set: 
          os.family: "{{json_event.message.os.family}}" 
          os.full: "{{json_event.message.os.full}}" 
          os.full.text: "{{json_event.message.os.full.text}}" 
          os.kernel: "{{json_event.message.os.kernel}}" 
          os.name: "{{json_event.message.os.name}}" 
          os.name.text: "{{json_event.message.os.name.text}}" 
          os.platform: "{{json_event.message.os.platform}}" 
          os.type: "{{json_event.message.os.type}}" 
          os.version: "{{json_event.message.os.version}}" 
        # The OS fields contain information about the operating system.
        filter: "{{json_event.message.os != null}}"

      - set: 
          package.architecture: "{{json_event.message.package.architecture}}" 
          package.build_version: "{{json_event.message.package.build_version}}" 
          package.checksum: "{{json_event.message.package.checksum}}" 
          package.description: "{{json_event.message.package.description}}" 
          package.install_scope: "{{json_event.message.package.install_scope}}" 
          package.installed: "{{json_event.message.package.installed}}" 
          package.license: "{{json_event.message.package.license}}" 
          package.name: "{{json_event.message.package.name}}" 
          package.path: "{{json_event.message.package.path}}" 
          package.reference: "{{json_event.message.package.reference}}" 
          package.size: "{{json_event.message.package.size}}" 
          package.type: "{{json_event.message.package.type}}" 
          package.version: "{{json_event.message.package.version}}" 
        # These fields contain information about an installed software package. It contains general information about a package, such as name, version or size. It also contains installation details, such as time or location.
        filter: "{{json_event.message.package != null}}"

      - set: 
          pe.architecture: "{{json_event.message.pe.architecture}}" 
          pe.company: "{{json_event.message.pe.company}}" 
          pe.description: "{{json_event.message.pe.description}}" 
          pe.file_version: "{{json_event.message.pe.file_version}}" 
          pe.imphash: "{{json_event.message.pe.imphash}}" 
          pe.original_file_name: "{{json_event.message.pe.original_file_name}}" 
          pe.product: "{{json_event.message.pe.product}}" 
        # These fields contain Windows Portable Executable (PE) metadata.
        filter: "{{json_event.message.pe != null}}"

      - set: 
          process.args: "{{json_event.message.process.args}}" 
          process.args_count: "{{json_event.message.process.args_count}}" 
          process.code_signature.exists: "{{json_event.message.process.code_signature.exists}}" 
          process.code_signature.signing_id: "{{json_event.message.process.code_signature.signing_id}}" 
          process.code_signature.status: "{{json_event.message.process.code_signature.status}}" 
          process.code_signature.subject_name: "{{json_event.message.process.code_signature.subject_name}}" 
          process.code_signature.team_id: "{{json_event.message.process.code_signature.team_id}}" 
          process.code_signature.trusted: "{{json_event.message.process.code_signature.trusted}}" 
          process.code_signature.valid: "{{json_event.message.process.code_signature.valid}}" 
          process.command_line: "{{json_event.message.process.command_line}}" 
          process.command_line.text: "{{json_event.message.process.command_line.text}}" 
          process.entity_id: "{{json_event.message.process.entity_id}}" 
          process.executable: "{{json_event.message.process.executable}}" 
          process.executable.text: "{{json_event.message.process.executable.text}}" 
          process.exit_code: "{{json_event.message.process.exit_code}}" 
          process.hash.md5: "{{json_event.message.process.hash.md5}}" 
          process.hash.sha1: "{{json_event.message.process.hash.sha1}}" 
          process.hash.sha256: "{{json_event.message.process.hash.sha256}}" 
          process.hash.sha512: "{{json_event.message.process.hash.sha512}}" 
          process.hash.ssdeep: "{{json_event.message.process.hash.ssdeep}}" 
          process.name: "{{json_event.message.process.name}}" 
          process.name.text: "{{json_event.message.process.name.text}}" 
          process.parent.args: "{{json_event.message.process.parent.args}}" 
          process.parent.args_count: "{{json_event.message.process.parent.args_count}}" 
          process.parent.code_signature.exists: "{{json_event.message.process.parent.code_signature.exists}}" 
          process.parent.code_signature.signing_id: "{{json_event.message.process.parent.code_signature.signing_id}}" 
          process.parent.code_signature.status: "{{json_event.message.process.parent.code_signature.status}}" 
          process.parent.code_signature.subject_name: "{{json_event.message.process.parent.code_signature.subject_name}}" 
          process.parent.code_signature.team_id: "{{json_event.message.process.parent.code_signature.team_id}}" 
          process.parent.code_signature.trusted: "{{json_event.message.process.parent.code_signature.trusted}}" 
          process.parent.code_signature.valid: "{{json_event.message.process.parent.code_signature.valid}}" 
          process.parent.command_line: "{{json_event.message.process.parent.command_line}}" 
          process.parent.command_line.text: "{{json_event.message.process.parent.command_line.text}}" 
          process.parent.entity_id: "{{json_event.message.process.parent.entity_id}}" 
          process.parent.executable: "{{json_event.message.process.parent.executable}}" 
          process.parent.executable.text: "{{json_event.message.process.parent.executable.text}}" 
          process.parent.exit_code: "{{json_event.message.process.parent.exit_code}}" 
          process.parent.hash.md5: "{{json_event.message.process.parent.hash.md5}}" 
          process.parent.hash.sha1: "{{json_event.message.process.parent.hash.sha1}}" 
          process.parent.hash.sha256: "{{json_event.message.process.parent.hash.sha256}}" 
          process.parent.hash.sha512: "{{json_event.message.process.parent.hash.sha512}}" 
          process.parent.hash.ssdeep: "{{json_event.message.process.parent.hash.ssdeep}}" 
          process.parent.name: "{{json_event.message.process.parent.name}}" 
          process.parent.name.text: "{{json_event.message.process.parent.name.text}}" 
          process.parent.pe.architecture: "{{json_event.message.process.parent.pe.architecture}}" 
          process.parent.pe.company: "{{json_event.message.process.parent.pe.company}}" 
          process.parent.pe.description: "{{json_event.message.process.parent.pe.description}}" 
          process.parent.pe.file_version: "{{json_event.message.process.parent.pe.file_version}}" 
          process.parent.pe.imphash: "{{json_event.message.process.parent.pe.imphash}}" 
          process.parent.pe.original_file_name: "{{json_event.message.process.parent.pe.original_file_name}}" 
          process.parent.pe.product: "{{json_event.message.process.parent.pe.product}}" 
          process.parent.pgid: "{{json_event.message.process.parent.pgid}}" 
          process.parent.pid: "{{json_event.message.process.parent.pid}}" 
          process.parent.ppid: "{{json_event.message.process.parent.ppid}}" 
          process.parent.start: "{{json_event.message.process.parent.start}}" 
          process.parent.thread.id: "{{json_event.message.process.parent.thread.id}}" 
          process.parent.thread.name: "{{json_event.message.process.parent.thread.name}}" 
          process.parent.title: "{{json_event.message.process.parent.title}}" 
          process.parent.title.text: "{{json_event.message.process.parent.title.text}}" 
          process.parent.uptime: "{{json_event.message.process.parent.uptime}}" 
          process.parent.working_directory: "{{json_event.message.process.parent.working_directory}}" 
          process.parent.working_directory.text: "{{json_event.message.process.parent.working_directory.text}}" 
          process.pe.architecture: "{{json_event.message.process.pe.architecture}}" 
          process.pe.company: "{{json_event.message.process.pe.company}}" 
          process.pe.description: "{{json_event.message.process.pe.description}}" 
          process.pe.file_version: "{{json_event.message.process.pe.file_version}}" 
          process.pe.imphash: "{{json_event.message.process.pe.imphash}}" 
          process.pe.original_file_name: "{{json_event.message.process.pe.original_file_name}}" 
          process.pe.product: "{{json_event.message.process.pe.product}}" 
          process.pgid: "{{json_event.message.process.pgid}}" 
          process.pid: "{{json_event.message.process.pid}}" 
          process.ppid: "{{json_event.message.process.ppid}}" 
          process.start: "{{json_event.message.process.start}}" 
          process.thread.id: "{{json_event.message.process.thread.id}}" 
          process.thread.name: "{{json_event.message.process.thread.name}}" 
          process.title: "{{json_event.message.process.title}}" 
          process.title.text: "{{json_event.message.process.title.text}}" 
          process.uptime: "{{json_event.message.process.uptime}}" 
          process.working_directory: "{{json_event.message.process.working_directory}}" 
          process.working_directory.text: "{{json_event.message.process.working_directory.text}}" 
        # These fields contain information about a process.
        filter: "{{json_event.message.process != null}}"

      - set: 
          registry.data.bytes: "{{json_event.message.registry.data.bytes}}" 
          registry.data.strings: "{{json_event.message.registry.data.strings}}" 
          registry.data.type: "{{json_event.message.registry.data.type}}" 
          registry.hive: "{{json_event.message.registry.hive}}" 
          registry.key: "{{json_event.message.registry.key}}" 
          registry.path: "{{json_event.message.registry.path}}" 
          registry.value: "{{json_event.message.registry.value}}" 
        # Fields related to Windows Registry operations.
        filter: "{{json_event.message.registry != null}}"

      - set: 
          related.hash: "{{json_event.message.related.hash}}" 
          related.hosts: "{{json_event.message.related.hosts}}" 
          related.ip: "{{json_event.message.related.ip}}" 
          related.user: "{{json_event.message.related.user}}" 
        # This field set is meant to facilitate pivoting around a piece of data.
        filter: "{{json_event.message.related != null}}"

      - set: 
          rule.author: "{{json_event.message.rule.author}}" 
          rule.category: "{{json_event.message.rule.category}}" 
          rule.description: "{{json_event.message.rule.description}}" 
          rule.id: "{{json_event.message.rule.id}}" 
          rule.license: "{{json_event.message.rule.license}}" 
          rule.name: "{{json_event.message.rule.name}}" 
          rule.reference: "{{json_event.message.rule.reference}}" 
          rule.ruleset: "{{json_event.message.rule.ruleset}}" 
          rule.uuid: "{{json_event.message.rule.uuid}}" 
          rule.version: "{{json_event.message.rule.version}}" 
        # Rule fields are used to capture the specifics of any observer or agent rules that generate alerts or other notable events.
        filter: "{{json_event.message.rule != null}}"

      - set: 
          server.address: "{{json_event.message.server.address}}" 
          server.as.number: "{{json_event.message.server.as.number}}" 
          server.as.organization.name: "{{json_event.message.server.as.organization.name}}" 
          server.as.organization.name.text: "{{json_event.message.server.as.organization.name.text}}" 
          server.bytes: "{{json_event.message.server.bytes}}" 
          server.domain: "{{json_event.message.server.domain}}" 
          server.geo.city_name: "{{json_event.message.server.geo.city_name}}" 
          server.geo.continent_code: "{{json_event.message.server.geo.continent_code}}" 
          server.geo.continent_name: "{{json_event.message.server.geo.continent_name}}" 
          server.geo.country_iso_code: "{{json_event.message.server.geo.country_iso_code}}" 
          server.geo.country_name: "{{json_event.message.server.geo.country_name}}" 
          server.geo.location: "{{json_event.message.server.geo.location}}" 
          server.geo.name: "{{json_event.message.server.geo.name}}" 
          server.geo.postal_code: "{{json_event.message.server.geo.postal_code}}" 
          server.geo.region_iso_code: "{{json_event.message.server.geo.region_iso_code}}" 
          server.geo.region_name: "{{json_event.message.server.geo.region_name}}" 
          server.geo.timezone: "{{json_event.message.server.geo.timezone}}" 
          server.ip: "{{json_event.message.server.ip}}" 
          server.mac: "{{json_event.message.server.mac}}" 
          server.nat.ip: "{{json_event.message.server.nat.ip}}" 
          server.nat.port: "{{json_event.message.server.nat.port}}" 
          server.packets: "{{json_event.message.server.packets}}" 
          server.port: "{{json_event.message.server.port}}" 
          server.registered_domain: "{{json_event.message.server.registered_domain}}" 
          server.subdomain: "{{json_event.message.server.subdomain}}" 
          server.top_level_domain: "{{json_event.message.server.top_level_domain}}" 
          server.user.domain: "{{json_event.message.server.user.domain}}" 
          server.user.email: "{{json_event.message.server.user.email}}" 
          server.user.full_name: "{{json_event.message.server.user.full_name}}" 
          server.user.full_name.text: "{{json_event.message.server.user.full_name.text}}" 
          server.user.group.domain: "{{json_event.message.server.user.group.domain}}" 
          server.user.group.id: "{{json_event.message.server.user.group.id}}" 
          server.user.group.name: "{{json_event.message.server.user.group.name}}" 
          server.user.hash: "{{json_event.message.server.user.hash}}" 
          server.user.id: "{{json_event.message.server.user.id}}" 
          server.user.name: "{{json_event.message.server.user.name}}" 
          server.user.name.text: "{{json_event.message.server.user.name.text}}" 
          server.user.roles: "{{json_event.message.server.user.roles}}" 
        # A Server is defined as the responder in a network connection for events regarding sessions, connections, or bidirectional flow records.
        filter: "{{json_event.message.server != null}}"

      - set: 
          service.ephemeral_id: "{{json_event.message.service.ephemeral_id}}" 
          service.id: "{{json_event.message.service.id}}" 
          service.name: "{{json_event.message.service.name}}" 
          service.node.name: "{{json_event.message.service.node.name}}" 
          service.state: "{{json_event.message.service.state}}" 
          service.type: "{{json_event.message.service.type}}" 
          service.version: "{{json_event.message.service.version}}" 
        # The service fields describe the service for or from which the data was collected.
        filter: "{{json_event.message.service != null}}"

      - set: 
          source.address: "{{json_event.message.source.address}}" 
          source.as.number: "{{json_event.message.source.as.number}}" 
          source.as.organization.name: "{{json_event.message.source.as.organization.name}}" 
          source.as.organization.name.text: "{{json_event.message.source.as.organization.name.text}}" 
          source.bytes: "{{json_event.message.source.bytes}}" 
          source.domain: "{{json_event.message.source.domain}}" 
          source.geo.city_name: "{{json_event.message.source.geo.city_name}}" 
          source.geo.continent_code: "{{json_event.message.source.geo.continent_code}}" 
          source.geo.continent_name: "{{json_event.message.source.geo.continent_name}}" 
          source.geo.country_iso_code: "{{json_event.message.source.geo.country_iso_code}}" 
          source.geo.country_name: "{{json_event.message.source.geo.country_name}}" 
          source.geo.location: "{{json_event.message.source.geo.location}}" 
          source.geo.name: "{{json_event.message.source.geo.name}}" 
          source.geo.postal_code: "{{json_event.message.source.geo.postal_code}}" 
          source.geo.region_iso_code: "{{json_event.message.source.geo.region_iso_code}}" 
          source.geo.region_name: "{{json_event.message.source.geo.region_name}}" 
          source.geo.timezone: "{{json_event.message.source.geo.timezone}}" 
          source.ip: "{{json_event.message.source.ip}}" 
          source.mac: "{{json_event.message.source.mac}}" 
          source.nat.ip: "{{json_event.message.source.nat.ip}}" 
          source.nat.port: "{{json_event.message.source.nat.port}}" 
          source.packets: "{{json_event.message.source.packets}}" 
          source.port: "{{json_event.message.source.port}}" 
          source.registered_domain: "{{json_event.message.source.registered_domain}}" 
          source.subdomain: "{{json_event.message.source.subdomain}}" 
          source.top_level_domain: "{{json_event.message.source.top_level_domain}}" 
          source.user.domain: "{{json_event.message.source.user.domain}}" 
          source.user.email: "{{json_event.message.source.user.email}}" 
          source.user.full_name: "{{json_event.message.source.user.full_name}}" 
          source.user.full_name.text: "{{json_event.message.source.user.full_name.text}}" 
          source.user.group.domain: "{{json_event.message.source.user.group.domain}}" 
          source.user.group.id: "{{json_event.message.source.user.group.id}}" 
          source.user.group.name: "{{json_event.message.source.user.group.name}}" 
          source.user.hash: "{{json_event.message.source.user.hash}}" 
          source.user.id: "{{json_event.message.source.user.id}}" 
          source.user.name: "{{json_event.message.source.user.name}}" 
          source.user.name.text: "{{json_event.message.source.user.name.text}}" 
          source.user.roles: "{{json_event.message.source.user.roles}}" 
        # Source fields capture details about the sender of a network exchange/packet. These fields are populated from a network event, packet, or other event containing details of a network transaction.
        filter: "{{json_event.message.source != null}}"

      - set: 
          threat.framework: "{{json_event.message.threat.framework}}" 
          threat.tactic.id: "{{json_event.message.threat.tactic.id}}" 
          threat.tactic.name: "{{json_event.message.threat.tactic.name}}" 
          threat.tactic.reference: "{{json_event.message.threat.tactic.reference}}" 
          threat.technique.id: "{{json_event.message.threat.technique.id}}" 
          threat.technique.name: "{{json_event.message.threat.technique.name}}" 
          threat.technique.name.text: "{{json_event.message.threat.technique.name.text}}" 
          threat.technique.reference: "{{json_event.message.threat.technique.reference}}" 
          threat.technique.subtechnique.id: "{{json_event.message.threat.technique.subtechnique.id}}" 
          threat.technique.subtechnique.name: "{{json_event.message.threat.technique.subtechnique.name}}" 
          threat.technique.subtechnique.name.text: "{{json_event.message.threat.technique.subtechnique.name.text}}" 
          threat.technique.subtechnique.reference: "{{json_event.message.threat.technique.subtechnique.reference}}" 
        # Fields to classify events and alerts according to a threat taxonomy such as the MITRE ATT&CK® framework.
        filter: "{{json_event.message.threat != null}}"

      - set: 
          tls.cipher: "{{json_event.message.tls.cipher}}" 
          tls.client.certificate: "{{json_event.message.tls.client.certificate}}" 
          tls.client.certificate_chain: "{{json_event.message.tls.client.certificate_chain}}" 
          tls.client.hash.md5: "{{json_event.message.tls.client.hash.md5}}" 
          tls.client.hash.sha1: "{{json_event.message.tls.client.hash.sha1}}" 
          tls.client.hash.sha256: "{{json_event.message.tls.client.hash.sha256}}" 
          tls.client.issuer: "{{json_event.message.tls.client.issuer}}" 
          tls.client.ja3: "{{json_event.message.tls.client.ja3}}" 
          tls.client.not_after: "{{json_event.message.tls.client.not_after}}" 
          tls.client.not_before: "{{json_event.message.tls.client.not_before}}" 
          tls.client.server_name: "{{json_event.message.tls.client.server_name}}" 
          tls.client.subject: "{{json_event.message.tls.client.subject}}" 
          tls.client.supported_ciphers: "{{json_event.message.tls.client.supported_ciphers}}" 
          tls.client.x509.alternative_names: "{{json_event.message.tls.client.x509.alternative_names}}" 
          tls.client.x509.issuer.common_name: "{{json_event.message.tls.client.x509.issuer.common_name}}" 
          tls.client.x509.issuer.country: "{{json_event.message.tls.client.x509.issuer.country}}" 
          tls.client.x509.issuer.distinguished_name: "{{json_event.message.tls.client.x509.issuer.distinguished_name}}" 
          tls.client.x509.issuer.locality: "{{json_event.message.tls.client.x509.issuer.locality}}" 
          tls.client.x509.issuer.organization: "{{json_event.message.tls.client.x509.issuer.organization}}" 
          tls.client.x509.issuer.organizational_unit: "{{json_event.message.tls.client.x509.issuer.organizational_unit}}" 
          tls.client.x509.issuer.state_or_province: "{{json_event.message.tls.client.x509.issuer.state_or_province}}" 
          tls.client.x509.not_after: "{{json_event.message.tls.client.x509.not_after}}" 
          tls.client.x509.not_before: "{{json_event.message.tls.client.x509.not_before}}" 
          tls.client.x509.public_key_algorithm: "{{json_event.message.tls.client.x509.public_key_algorithm}}" 
          tls.client.x509.public_key_curve: "{{json_event.message.tls.client.x509.public_key_curve}}" 
          tls.client.x509.public_key_exponent: "{{json_event.message.tls.client.x509.public_key_exponent}}" 
          tls.client.x509.public_key_size: "{{json_event.message.tls.client.x509.public_key_size}}" 
          tls.client.x509.serial_number: "{{json_event.message.tls.client.x509.serial_number}}" 
          tls.client.x509.signature_algorithm: "{{json_event.message.tls.client.x509.signature_algorithm}}" 
          tls.client.x509.subject.common_name: "{{json_event.message.tls.client.x509.subject.common_name}}" 
          tls.client.x509.subject.country: "{{json_event.message.tls.client.x509.subject.country}}" 
          tls.client.x509.subject.distinguished_name: "{{json_event.message.tls.client.x509.subject.distinguished_name}}" 
          tls.client.x509.subject.locality: "{{json_event.message.tls.client.x509.subject.locality}}" 
          tls.client.x509.subject.organization: "{{json_event.message.tls.client.x509.subject.organization}}" 
          tls.client.x509.subject.organizational_unit: "{{json_event.message.tls.client.x509.subject.organizational_unit}}" 
          tls.client.x509.subject.state_or_province: "{{json_event.message.tls.client.x509.subject.state_or_province}}" 
          tls.client.x509.version_number: "{{json_event.message.tls.client.x509.version_number}}" 
          tls.curve: "{{json_event.message.tls.curve}}" 
          tls.established: "{{json_event.message.tls.established}}" 
          tls.next_protocol: "{{json_event.message.tls.next_protocol}}" 
          tls.resumed: "{{json_event.message.tls.resumed}}" 
          tls.server.certificate: "{{json_event.message.tls.server.certificate}}" 
          tls.server.certificate_chain: "{{json_event.message.tls.server.certificate_chain}}" 
          tls.server.hash.md5: "{{json_event.message.tls.server.hash.md5}}" 
          tls.server.hash.sha1: "{{json_event.message.tls.server.hash.sha1}}" 
          tls.server.hash.sha256: "{{json_event.message.tls.server.hash.sha256}}" 
          tls.server.issuer: "{{json_event.message.tls.server.issuer}}" 
          tls.server.ja3s: "{{json_event.message.tls.server.ja3s}}" 
          tls.server.not_after: "{{json_event.message.tls.server.not_after}}" 
          tls.server.not_before: "{{json_event.message.tls.server.not_before}}" 
          tls.server.subject: "{{json_event.message.tls.server.subject}}" 
          tls.server.x509.alternative_names: "{{json_event.message.tls.server.x509.alternative_names}}" 
          tls.server.x509.issuer.common_name: "{{json_event.message.tls.server.x509.issuer.common_name}}" 
          tls.server.x509.issuer.country: "{{json_event.message.tls.server.x509.issuer.country}}" 
          tls.server.x509.issuer.distinguished_name: "{{json_event.message.tls.server.x509.issuer.distinguished_name}}" 
          tls.server.x509.issuer.locality: "{{json_event.message.tls.server.x509.issuer.locality}}" 
          tls.server.x509.issuer.organization: "{{json_event.message.tls.server.x509.issuer.organization}}" 
          tls.server.x509.issuer.organizational_unit: "{{json_event.message.tls.server.x509.issuer.organizational_unit}}" 
          tls.server.x509.issuer.state_or_province: "{{json_event.message.tls.server.x509.issuer.state_or_province}}" 
          tls.server.x509.not_after: "{{json_event.message.tls.server.x509.not_after}}" 
          tls.server.x509.not_before: "{{json_event.message.tls.server.x509.not_before}}" 
          tls.server.x509.public_key_algorithm: "{{json_event.message.tls.server.x509.public_key_algorithm}}" 
          tls.server.x509.public_key_curve: "{{json_event.message.tls.server.x509.public_key_curve}}" 
          tls.server.x509.public_key_exponent: "{{json_event.message.tls.server.x509.public_key_exponent}}" 
          tls.server.x509.public_key_size: "{{json_event.message.tls.server.x509.public_key_size}}" 
          tls.server.x509.serial_number: "{{json_event.message.tls.server.x509.serial_number}}" 
          tls.server.x509.signature_algorithm: "{{json_event.message.tls.server.x509.signature_algorithm}}" 
          tls.server.x509.subject.common_name: "{{json_event.message.tls.server.x509.subject.common_name}}" 
          tls.server.x509.subject.country: "{{json_event.message.tls.server.x509.subject.country}}" 
          tls.server.x509.subject.distinguished_name: "{{json_event.message.tls.server.x509.subject.distinguished_name}}" 
          tls.server.x509.subject.locality: "{{json_event.message.tls.server.x509.subject.locality}}" 
          tls.server.x509.subject.organization: "{{json_event.message.tls.server.x509.subject.organization}}" 
          tls.server.x509.subject.organizational_unit: "{{json_event.message.tls.server.x509.subject.organizational_unit}}" 
          tls.server.x509.subject.state_or_province: "{{json_event.message.tls.server.x509.subject.state_or_province}}" 
          tls.server.x509.version_number: "{{json_event.message.tls.server.x509.version_number}}" 
          tls.version: "{{json_event.message.tls.version}}" 
          tls.version_protocol: "{{json_event.message.tls.version_protocol}}" 
          span.id: "{{json_event.message.span.id}}" 
          trace.id: "{{json_event.message.trace.id}}" 
          transaction.id: "{{json_event.message.transaction.id}}" 
        # Fields related to a TLS connection. These fields focus on the TLS protocol itself and intentionally avoids in-depth analysis of the related x.509 certificate files.
        filter: "{{json_event.message.tls != null}}"

      - set: 
          url.domain: "{{json_event.message.url.domain}}" 
          url.extension: "{{json_event.message.url.extension}}" 
          url.fragment: "{{json_event.message.url.fragment}}" 
          url.full: "{{json_event.message.url.full}}" 
          url.full.text: "{{json_event.message.url.full.text}}" 
          url.original: "{{json_event.message.url.original}}" 
          url.original.text: "{{json_event.message.url.original.text}}" 
          url.password: "{{json_event.message.url.password}}" 
          url.path: "{{json_event.message.url.path}}" 
          url.port: "{{json_event.message.url.port}}" 
          url.query: "{{json_event.message.url.query}}" 
          url.registered_domain: "{{json_event.message.url.registered_domain}}" 
          url.scheme: "{{json_event.message.url.scheme}}" 
          url.subdomain: "{{json_event.message.url.subdomain}}" 
          url.top_level_domain: "{{json_event.message.url.top_level_domain}}" 
          url.username: "{{json_event.message.url.username}}" 
        # URL fields provide support for complete or partial URLs, and supports the breaking down into scheme, domain, path, and so on.
        filter: "{{json_event.message.url != null}}"

      - set: 
          user.changes.domain: "{{json_event.message.user.changes.domain}}" 
          user.changes.email: "{{json_event.message.user.changes.email}}" 
          user.changes.full_name: "{{json_event.message.user.changes.full_name}}" 
          user.changes.full_name.text: "{{json_event.message.user.changes.full_name.text}}" 
          user.changes.group.domain: "{{json_event.message.user.changes.group.domain}}" 
          user.changes.group.id: "{{json_event.message.user.changes.group.id}}" 
          user.changes.group.name: "{{json_event.message.user.changes.group.name}}" 
          user.changes.hash: "{{json_event.message.user.changes.hash}}" 
          user.changes.id: "{{json_event.message.user.changes.id}}" 
          user.changes.name: "{{json_event.message.user.changes.name}}" 
          user.changes.name.text: "{{json_event.message.user.changes.name.text}}" 
          user.changes.roles: "{{json_event.message.user.changes.roles}}" 
          user.domain: "{{json_event.message.user.domain}}" 
          user.effective.domain: "{{json_event.message.user.effective.domain}}" 
          user.effective.email: "{{json_event.message.user.effective.email}}" 
          user.effective.full_name: "{{json_event.message.user.effective.full_name}}" 
          user.effective.full_name.text: "{{json_event.message.user.effective.full_name.text}}" 
          user.effective.group.domain: "{{json_event.message.user.effective.group.domain}}" 
          user.effective.group.id: "{{json_event.message.user.effective.group.id}}" 
          user.effective.group.name: "{{json_event.message.user.effective.group.name}}" 
          user.effective.hash: "{{json_event.message.user.effective.hash}}" 
          user.effective.id: "{{json_event.message.user.effective.id}}" 
          user.effective.name: "{{json_event.message.user.effective.name}}" 
          user.effective.name.text: "{{json_event.message.user.effective.name.text}}" 
          user.effective.roles: "{{json_event.message.user.effective.roles}}" 
          user.email: "{{json_event.message.user.email}}" 
          user.full_name: "{{json_event.message.user.full_name}}" 
          user.full_name.text: "{{json_event.message.user.full_name.text}}" 
          user.group.domain: "{{json_event.message.user.group.domain}}" 
          user.group.id: "{{json_event.message.user.group.id}}" 
          user.group.name: "{{json_event.message.user.group.name}}" 
          user.hash: "{{json_event.message.user.hash}}" 
          user.id: "{{json_event.message.user.id}}" 
          user.name: "{{json_event.message.user.name}}" 
          user.name.text: "{{json_event.message.user.name.text}}" 
          user.roles: "{{json_event.message.user.roles}}" 
          user.target.domain: "{{json_event.message.user.target.domain}}" 
          user.target.email: "{{json_event.message.user.target.email}}" 
          user.target.full_name: "{{json_event.message.user.target.full_name}}" 
          user.target.full_name.text: "{{json_event.message.user.target.full_name.text}}" 
          user.target.group.domain: "{{json_event.message.user.target.group.domain}}" 
          user.target.group.id: "{{json_event.message.user.target.group.id}}" 
          user.target.group.name: "{{json_event.message.user.target.group.name}}" 
          user.target.hash: "{{json_event.message.user.target.hash}}" 
          user.target.id: "{{json_event.message.user.target.id}}" 
          user.target.name: "{{json_event.message.user.target.name}}" 
          user.target.name.text: "{{json_event.message.user.target.name.text}}" 
          user.target.roles: "{{json_event.message.user.target.roles}}" 
        # The user fields describe information about the user that is relevant to the event.
        filter: "{{json_event.message.user != null}}"

      - set: 
          user_agent.device.name: "{{json_event.message.user_agent.device.name}}" 
          user_agent.name: "{{json_event.message.user_agent.name}}" 
          user_agent.original: "{{json_event.message.user_agent.original}}" 
          user_agent.original.text: "{{json_event.message.user_agent.original.text}}" 
          user_agent.os.family: "{{json_event.message.user_agent.os.family}}" 
          user_agent.os.full: "{{json_event.message.user_agent.os.full}}" 
          user_agent.os.full.text: "{{json_event.message.user_agent.os.full.text}}" 
          user_agent.os.kernel: "{{json_event.message.user_agent.os.kernel}}" 
          user_agent.os.name: "{{json_event.message.user_agent.os.name}}" 
          user_agent.os.name.text: "{{json_event.message.user_agent.os.name.text}}" 
          user_agent.os.platform: "{{json_event.message.user_agent.os.platform}}" 
          user_agent.os.type: "{{json_event.message.user_agent.os.type}}" 
          user_agent.os.version: "{{json_event.message.user_agent.os.version}}" 
          user_agent.version: "{{json_event.message.user_agent.version}}" 
        # The user fields describe information about the user that is relevant to the event.
        filter: "{{json_event.message.user_agent != null}}"

      - set: 
          vlan.id: "{{json_event.message.vlan.id}}" 
          vlan.name: "{{json_event.message.vlan.name}}" 
        # The VLAN fields are used to identify 802.1q tag(s) of a packet, as well as ingress and egress VLAN associations of an observer in relation to a specific packet or connection.
        filter: "{{json_event.message.vlan != null}}"

      - set: 
          vulnerability.category: "{{json_event.message.vulnerability.category}}" 
          vulnerability.classification: "{{json_event.message.vulnerability.classification}}" 
          vulnerability.description: "{{json_event.message.vulnerability.description}}" 
          vulnerability.description.text: "{{json_event.message.vulnerability.description.text}}" 
          vulnerability.enumeration: "{{json_event.message.vulnerability.enumeration}}" 
          vulnerability.id: "{{json_event.message.vulnerability.id}}" 
          vulnerability.reference: "{{json_event.message.vulnerability.reference}}" 
          vulnerability.report_id: "{{json_event.message.vulnerability.report_id}}" 
          vulnerability.scanner.vendor: "{{json_event.message.vulnerability.scanner.vendor}}" 
          vulnerability.score.base: "{{json_event.message.vulnerability.score.base}}" 
          vulnerability.score.environmental: "{{json_event.message.vulnerability.score.environmental}}" 
          vulnerability.score.temporal: "{{json_event.message.vulnerability.score.temporal}}" 
          vulnerability.score.version: "{{json_event.message.vulnerability.score.version}}" 
          vulnerability.severity: "{{json_event.message.vulnerability.severity}}" 
        # The vulnerability fields describe information about a vulnerability that is relevant to an event.
        filter: "{{json_event.message.vulnerability != null}}"

      - set: 
          x509.alternative_names: "{{json_event.message.x509.alternative_names}}" 
          x509.issuer.common_name: "{{json_event.message.x509.issuer.common_name}}" 
          x509.issuer.country: "{{json_event.message.x509.issuer.country}}" 
          x509.issuer.distinguished_name: "{{json_event.message.x509.issuer.distinguished_name}}" 
          x509.issuer.locality: "{{json_event.message.x509.issuer.locality}}" 
          x509.issuer.organization: "{{json_event.message.x509.issuer.organization}}" 
          x509.issuer.organizational_unit: "{{json_event.message.x509.issuer.organizational_unit}}" 
          x509.issuer.state_or_province: "{{json_event.message.x509.issuer.state_or_province}}" 
          x509.not_after: "{{json_event.message.x509.not_after}}" 
          x509.not_before: "{{json_event.message.x509.not_before}}" 
          x509.public_key_algorithm: "{{json_event.message.x509.public_key_algorithm}}" 
          x509.public_key_curve: "{{json_event.message.x509.public_key_curve}}" 
          x509.public_key_exponent: "{{json_event.message.x509.public_key_exponent}}" 
          x509.public_key_size: "{{json_event.message.x509.public_key_size}}" 
          x509.serial_number: "{{json_event.message.x509.serial_number}}" 
          x509.signature_algorithm: "{{json_event.message.x509.signature_algorithm}}" 
          x509.subject.common_name: "{{json_event.message.x509.subject.common_name}}" 
          x509.subject.country: "{{json_event.message.x509.subject.country}}" 
          x509.subject.distinguished_name: "{{json_event.message.x509.subject.distinguished_name}}" 
          x509.subject.locality: "{{json_event.message.x509.subject.locality}}" 
          x509.subject.organization: "{{json_event.message.x509.subject.organization}}" 
          x509.subject.organizational_unit: "{{json_event.message.x509.subject.organizational_unit}}" 
          x509.subject.state_or_province: "{{json_event.message.x509.subject.state_or_province}}" 
          x509.version_number: "{{json_event.message.x509.version_number}}" 
        # The vulnerability fields describe information about a vulnerability that is relevant to an event.
        filter: "{{json_event.message.x509 != null}}"

  rename_File-Integrity-fields:
    actions:
      - set: 
          hash.blake2b_256: "{{json_event.message.hash.blake2b_256}}" 
          hash.blake2b_384: "{{json_event.message.hash.blake2b_384}}" 
          hash.blake2b_512: "{{json_event.message.hash.blake2b_512}}" 
          hash.md5: "{{json_event.message.hash.md5}}" 
          hash.sha1: "{{json_event.message.hash.sha1}}" 
          hash.sha224: "{{json_event.message.hash.sha224}}" 
          hash.sha256: "{{json_event.message.hash.sha256}}" 
          hash.sha384: "{{json_event.message.hash.sha384}}" 
          hash.sha3_224: "{{json_event.message.hash.sha3_224}}" 
          hash.sha3_256: "{{json_event.message.hash.sha3_256}}" 
          hash.sha3_384: "{{json_event.message.hash.sha3_384}}" 
          hash.sha3_512: "{{json_event.message.hash.sha3_512}}" 
          hash.sha512: "{{json_event.message.hash.sha512}}" 
          hash.sha512_224: "{{json_event.message.hash.sha512_224}}" 
          hash.sha512_256: "{{json_event.message.hash.sha512_256}}" 
          hash.xxh64: "{{json_event.message.hash.xxh64}}" 
        # Hashes of the file. The keys are algorithm names and the values are the hex encoded digest values.
        filter: "{{json_event.message.hash != null}}"

  rename_Host-fields:
    actions:
      - set: 
          host.containerized: "{{json_event.message.host.containerized}}" 
          host.os.build: "{{json_event.message.host.os.build}}" 
          host.os.codename: "{{json_event.message.host.os.codename}}" 
        # Info collected for the host machine.

  rename_Jolokia-Discovery-autodiscover-provider-fields:
    actions:
      - set: 
          jolokia.agent.version: "{{json_event.message.jolokia.agent.version}}" 
          jolokia.agent.id: "{{json_event.message.jolokia.agent.id}}" 
          jolokia.server.product: "{{json_event.message.jolokia.server.product}}" 
          jolokia.server.version: "{{json_event.message.jolokia.server.version}}" 
          jolokia.server.vendor: "{{json_event.message.jolokia.server.vendor}}" 
          jolokia.url: "{{json_event.message.jolokia.url}}" 
          jolokia.secured: "{{json_event.message.jolokia.secured}}" 
        # Metadata from Jolokia Discovery added by the jolokia provider.

  rename_Kubernetes-fields:
    actions:
      - set: 
          kubernetes.pod.name: "{{json_event.message.kubernetes.pod.name}}" 
          kubernetes.pod.uid: "{{json_event.message.kubernetes.pod.uid}}" 
          kubernetes.pod.ip: "{{json_event.message.kubernetes.pod.ip}}" 
          kubernetes.namespace: "{{json_event.message.kubernetes.namespace}}" 
          kubernetes.node.name: "{{json_event.message.kubernetes.node.name}}" 
          kubernetes.node.hostname: "{{json_event.message.kubernetes.node.hostname}}" 
          kubernetes.labels: "{{json_event.message.kubernetes.labels}}" 
          kubernetes.annotations: "{{json_event.message.kubernetes.annotations}}" 
          kubernetes.selectors: "{{json_event.message.kubernetes.selectors}}" 
          kubernetes.replicaset.name: "{{json_event.message.kubernetes.replicaset.name}}" 
          kubernetes.deployment.name: "{{json_event.message.kubernetes.deployment.name}}" 
          kubernetes.statefulset.name: "{{json_event.message.kubernetes.statefulset.name}}" 
          kubernetes.container.name: "{{json_event.message.kubernetes.container.name}}" 
          container.image.name: "{{json_event.message.kubernetes.container.image}}" 
        # Kubernetes metadata added by the kubernetes processor

  rename_Process-fields:
    actions:
      - set: 
          process.executable: "{{json_event.message.process.exe}}" 
        # Process metadata fields

  mutate_Process-fields:
    actions:
      - set: 
          process.command_line: "{{json_event.message.process.args | join(' ')}}" 
        # Process metadata fields
        filter: "{{json_event.message.process != null and json_event.message.process.name != 'postgres'}}"

  rename_System-fields:
    actions:
      - set: 
          event.origin: "{{json_event.message.event.origin}}" 
          user.entity_id: "{{json_event.message.user.entity_id}}" 
          user.terminal: "{{json_event.message.user.terminal}}" 
        # These are the fields generated by the system module.


      - set: 
          process.hash.blake2b_256: "{{json_event.message.process.hash.blake2b_256}}" 
          process.hash.blake2b_384: "{{json_event.message.process.hash.blake2b_384}}" 
          process.hash.blake2b_512: "{{json_event.message.process.hash.blake2b_512}}" 
          process.hash.sha224: "{{json_event.message.process.hash.sha224}}" 
          process.hash.sha384: "{{json_event.message.process.hash.sha384}}" 
          process.hash.sha3_224: "{{json_event.message.process.hash.sha3_224}}" 
          process.hash.sha3_256: "{{json_event.message.process.hash.sha3_256}}" 
          process.hash.sha3_384: "{{json_event.message.process.hash.sha3_384}}" 
          process.hash.sha3_512: "{{json_event.message.process.hash.sha3_512}}" 
          process.hash.sha512_224: "{{json_event.message.process.hash.sha512_224}}" 
          process.hash.sha512_256: "{{json_event.message.process.hash.sha512_256}}" 
          process.hash.xxh64: "{{json_event.message.process.hash.xxh64}}" 
          socket.entity_id: "{{json_event.message.socket.entity_id}}" 
        # Hashes of the executable. The keys are algorithm names and the values are the hex encoded digest values.
        filter: "{{json_event.message.process != null and json_event.message.process.hash != null}}"

      - set: 
          system.audit.host.uptime: "{{json_event.message.system.audit.host.uptime}}" 
          system.audit.host.boottime: "{{json_event.message.system.audit.host.boottime}}" 
          system.audit.host.containerized: "{{json_event.message.system.audit.host.containerized}}" 
          system.audit.host.timezone.name: "{{json_event.message.system.audit.host.timezone.name}}" 
          system.audit.host.timezone.offset.sec: "{{json_event.message.system.audit.host.timezone.offset.sec}}" 
          system.audit.host.hostname: "{{json_event.message.system.audit.host.hostname}}" 
          system.audit.host.id: "{{json_event.message.system.audit.host.id}}" 
          system.audit.host.architecture: "{{json_event.message.system.audit.host.architecture}}" 
          system.audit.host.mac: "{{json_event.message.system.audit.host.mac}}" 
          system.audit.host.ip: "{{json_event.message.system.audit.host.ip}}" 
        # `host` contains general host information.
        filter: "{{json_event.message.system != null and json_event.message.system.audit != null and json_event.message.system.audit.host != null}}"

      - set: 
          system.audit.host.os.codename: "{{json_event.message.system.audit.host.os.codename}}" 
          system.audit.host.os.platform: "{{json_event.message.system.audit.host.os.platform}}" 
          system.audit.host.os.name: "{{json_event.message.system.audit.host.os.name}}" 
          system.audit.host.os.family: "{{json_event.message.system.audit.host.os.family}}" 
          system.audit.host.os.version: "{{json_event.message.system.audit.host.os.version}}" 
          system.audit.host.os.kernel: "{{json_event.message.system.audit.host.os.kernel}}" 
          system.audit.host.os.type: "{{json_event.message.system.audit.host.os.type}}" 
        # `os` contains information about the operating system.
        filter: "{{json_event.message.audit != null and json_event.message.audit.host != null and json_event.message.audit.host.os != null}}"

      - set: 
          system.audit.package.entity_id: "{{json_event.message.system.audit.package.entity_id}}" 
          system.audit.package.name: "{{json_event.message.system.audit.package.name}}" 
          system.audit.package.version: "{{json_event.message.system.audit.package.version}}" 
          system.audit.package.release: "{{json_event.message.system.audit.package.release}}" 
          system.audit.package.arch: "{{json_event.message.system.audit.package.arch}}" 
          system.audit.package.license: "{{json_event.message.system.audit.package.license}}" 
          system.audit.package.installtime: "{{json_event.message.system.audit.package.installtime}}" 
          system.audit.package.size: "{{json_event.message.system.audit.package.size}}" 
          system.audit.package.summary: "{{json_event.message.system.audit.package.summary}}" 
          system.audit.package.url: "{{json_event.message.system.audit.package.url}}" 
        # `package` contains information about an installed or removed package.
        filter: "{{json_event.message.system != null and json_event.message.system.audit != null and json_event.message.system.audit.package != null}}"

      - set: 
          system.audit.user.name: "{{json_event.message.system.audit.user.name}}" 
          system.audit.user.gid: "{{json_event.message.system.audit.user.gid}}" 
          system.audit.user.dir: "{{json_event.message.system.audit.user.dir}}" 
          system.audit.user.shell: "{{json_event.message.system.audit.user.shell}}" 
          system.audit.user.user_information: "{{json_event.message.system.audit.user.user_information}}" 
          system.audit.user.group: "{{json_event.message.system.audit.user.group}}" 
        # `user` contains information about the users on a system.
        filter: "{{json_event.message.system != null and json_event.message.system.audit!= null and json_event.message.system.audit.user != null}}"
