name: stormshield-endpoint-security
pipeline:
  - name: json_event
    external:
      name: json.parse-json

  - name: parsed_date
    external:
      name: date.parse
      properties:
        input_field: "{{json_event.message.Timestamp}}"
        output_field: date

  - name: set_ecs_fields

stages:
  set_ecs_fields:
    actions:
      - set:
          "@timestamp": "{{parsed_date.date}}"
          event.kind: "event"
          event.severity: "{{json_event.message.Severity}}"
          event.code: "{{json_event.message.TypeComputedMap}}"
          event.action: "{{json_event.message.SpecificData.OperationComputedMap}}"

          rule.uuid: "{{json_event.message.SpecificData.Action.RuleGuid[1:-1]}}"

          source.ip: "{{json_event.message.SpecificData.LocalAddress}}"
          source.port: "{{json_event.message.SpecificData.LocalPort}}"
          destination.ip: "{{json_event.message.SpecificData.RemoteAddress}}"
          destination.port: "{{json_event.message.SpecificData.RemotePort}}"
          destination.mac: "{{json_event.message.SpecificData.RemoteMacAddress}}"

          network.type: "{{json_event.message.SpecificData.ProtocolComputedMap}}"
          network.transport: "{{json_event.message.SpecificData.AddressFamilyComputedMap}}"

          process.pid: "{{json_event.message.SpecificData.SourceProcess.PID}}"
          process.start: "{{json_event.message.SpecificData.SourceProcess.ProcessStartTime}}"
          process.executable: "{{json_event.message.SpecificData.SourceProcess.ProcessImageName}}"
          process.command_line: "{{json_event.message.SpecificData.SourceProcess.ProcessCommandLine}}"
          process.hash.sha1: "{{json_event.message.SpecificData.SourceProcess.HashSha1}}"
          process.hash.md5: "{{json_event.message.SpecificData.SourceProcess.HashMd5}}"
          process.hash.sha256: "{{json_event.message.SpecificData.SourceProcess.HashSha256}}"
          process.user.id: "{{json_event.message.SpecificData.SourceProcess.User}}"
          stormshield.ses.process.user.domain: "{{json_event.message.SpecificData.SourceProcess.UserDomainLookup}}"
          process.user.name: "{{json_event.message.SpecificData.SourceProcess.UserNameLookup}}"
          process.parent.pid: "{{json_event.message.SpecificData.ParentProcess.PID}}"
          process.parent.start: "{{json_event.message.SpecificData.ParentProcess.ProcessStartTime}}"
          process.parent.executable: "{{json_event.message.SpecificData.ParentProcess.ProcessImageName}}"
          process.parent.command_line: "{{json_event.message.SpecificData.ParentProcess.ProcessCommandLine}}"
          process.parent.hash.sha1: "{{json_event.message.SpecificData.ParentProcess.HashSha1}}"
          process.parent.hash.md5: "{{json_event.message.SpecificData.ParentProcess.HashMd5}}"
          process.parent.hash.sha256: "{{json_event.message.SpecificData.ParentProcess.HashSha256}}"
          process.parent.user.id: "{{json_event.message.SpecificData.ParentProcess.User}}"
          stormshield.ses.process.parent.user.domain: "{{json_event.message.SpecificData.ParentProcess.UserDomainLookup}}"
          process.parent.user.name: "{{json_event.message.SpecificData.ParentProcess.UserNameLookup}}"

          file.owner: "{{json_event.message.SpecificData.FileOwnerNameLookup}}"
          url.original: "{{json_event.message.SpecificData.DownloadUrl}}"
          stormshield.ses.type: "{{json_event.message.Type}}"
          stormshield.ses.process.target.command_line: "{{json_event.message.SpecificData.TargetProcess.ProcessCommandLine}}"

      - set:
          stormshield.ses.incident.id: "{{json_event.message.AdditionalData.IncidentGuid}}"
          agent.id: "{{json_event.message.AdditionalData.AgentGuid}}"
          agent.name: "{{json_event.message.AdditionalData.AgentName}}"
          rule.ruleset: "{{json_event.message.AdditionalData.PolicyName}}"
        filter: "{{json_event.message.AdditionalData != None}}"

      - set:
          registry.path: "{{json_event.message.SpecificData.Path}}"
          registry.hive: "{{json_event.message.SpecificData.Path.split('\\', 1)[0]}}"
          registry.key: "{{json_event.message.SpecificData.Path.split('\\', 1)[1]}}"
        filter: "{{json_event.message.TypeComputedMap.startwith('Registry')}}"

      - set:
          file.path: "{{json_event.message.SpecificData.Path}}"
        filter: "{{json_event.message.TypeComputedMap.startwith('File') or json_event.message.TypeComputedMap in ['RawVolumeAccess', 'DriverLoading']}}"

      - translate:
        dictionary:
          true: ["allowed"]
          false: ["denied"]
        mapping:
          json_event.message.SpecificData.Action.Blocked: event.type

      - translate:
        dictionary:
          7: ["process"]
          11: ["process"]
          51: ["process"]
          55: ["process"]
          56: ["process"]
          43: ["threat"]
          44: ["threat"]
          45: ["threat"]
          46: ["threat"]
          47: ["threat"]
          50: ["threat"]
          53: ["threat"]
          57: ["threat"]
          58: ["threat"]
          59: ["threat"]
          20054: ["threat"]
          20055: ["threat"]
          20056: ["threat"]
          20057: ["threat"]
          20060: ["threat"]
          20061: ["threat"]
          20068: ["threat"]
          20082: ["threat"]
          39: ["file"]
          173: ["file"]
          174: ["file"]
          175: ["file"]
          176: ["file"]
          177: ["file"]
          20089: ["file"]
          20095: ["file"]
          103: ["registry"]
          104: ["registry"]
          109: ["registry"]
          112: ["registry"]
          113: ["registry"]
          114: ["registry"]
          115: ["registry"]
          116: ["registry"]
          20091: ["registry"]
          20092: ["registry"]
          20093: ["registry"]
          40: ["network"]
          41: ["network"]
          42: ["network"]
          361: ["network"]
          400: ["network"]
          401: ["network"]
          301: ["driver"]
          302: ["driver"]
          303: ["driver"]
          305: ["driver"]
          325: ["driver"]
          326: ["driver"]
          327: ["driver"]
        mapping:
          json_event.message.Type: event.category
