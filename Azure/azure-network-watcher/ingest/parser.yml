name: azure-network-watcher
pipeline:
  - name: json_event
    external:
      name: json.parse-json

  - name: parsed_flow_0
    filter: "{{json_event.message.get('flow.0') != None}}"
    external:
      name: grok.match
      properties:
        input_field: "{{json_event.message.get('flow.0')}}"
        output_field: result
        pattern: "%{NUMBER:timestamp},%{IP:source_ip},%{IP:destination_ip},%{NUMBER:source_port},%{NUMBER:destination_port}%{GREEDYDATA}"

  - name: set_common_fields
  - name: set_network_fields
  - name: set_source_fields
  - name: set_destination_fields

stages:
  set_source_fields:
    actions:
      - set:
          source.ip: "{{json_event.message.source_addr or parsed_flow_0.result.source_ip}}"
          source.port: "{{json_event.message.source_port or parsed_flow_0.result.source_port}}"
          source.packets: "{{json_event.message.source_packets}}"
          source.bytes: "{{json_event.message.source_bytes}}"
          source.mac: "{{json_event.message.macAddress}}"

  set_destination_fields:
    actions:
      - set:
          destination.ip: "{{json_event.message.destination_addr or parsed_flow_0.result.destination_ip}}"
          destination.port: "{{json_event.message.destination_port or parsed_flow_0.result.destination_port}}"
          destination.packets: "{{json_event.message.destination_packets}}"
          destination.bytes: "{{json_event.message.destination_bytes}}"

  set_network_fields:
    actions:
      - set:
          network.transport: "{{json_event.message.protocol or 'tcp'}}"

      - translate:
        dictionary:
          "begin": "inbound"
          "end": "outbound"
        mapping:
          json_event.message.flow_state: network.direction
        fallback: "{{json_event.message.traffic_flow}}"

  set_common_fields:
    actions:
      - set:
          event.kind: "event"
          event.code: "{{json_event.message.operationName}}"
          event.action: "{{json_event.message.traffic_decision}}"
          "@timestamp": "{{json_event.message.flowtime}}"

          rule.name: "{{json_event.message.rule}}"

          action.name: "{{json_event.message.traffic_decision}}"
          action.type: "{{json_event.message.rule}}"
          action.properties: >
            [
              {
                {% if json_event.message.get("operationName") != None %}
                'OperationName': '{{json_event.message.operationName}}',
                {% endif %}
                {% if json_event.message.get("flow_state") != None %}
                'FlowState': '{{json_event.message.flow_state}}',
                {% endif %}
                {% if json_event.message.get("version") != None %}
                'Version': '{{json_event.message.version}}',
                {% endif %}
              }
            ]

          host.name: "{{json_event.message.resourceId}}"
