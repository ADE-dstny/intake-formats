name: vmware-vcenter
pipeline:
  - name: parsed_event
    external:
      name: grok.match
      properties:
        input_field: "{{original.message}}"
        output_field: message
        pattern: "%{SESSION}"

        custom_patterns:
          SESSION_TYPE_1: "Event \[%{BASE10NUM:id}\] \[%{DATA}\] \[%{TIMESTAMP_ISO8601:timestamp}\] \[%{DATA:event_code}\] \[%{DATA:log_level}\] \[%{DATA:source_user_name}\] \[%{DATA}\] \[%{BASE10NUM:id_2}\] \[Cannot login %{USER:username}@%{IP:ip_address}\]"
          SESSION_TYPE_2: "Event \[%{BASE10NUM:id}\] \[%{DATA}\] \[%{TIMESTAMP_ISO8601:timestamp}\] \[%{DATA:event_code}\] \[%{DATA:log_level}\] \[%{DATA}\] \[%{DATA}\] \[%{BASE10NUM:id_2}\] \[User %{DATA}@%{IP:ip_address} logged in as %{GREEDYDATA:username}\]"
          SESSION_TYPE_3: "Event \[%{BASE10NUM:id}\] \[%{DATA}\] \[%{TIMESTAMP_ISO8601:timestamp}\] \[%{GREEDYDATA:event_code}\] \[%{WORD:log_level}\] \[%{DATA}\] \[%{DATA:hostname}\] \[%{BASE10NUM:id_2}\] \[User %{NOTSPACE:username} logged out \(login time: %{GREEDYDATA:login_time}, number of API invocations: %{BASE10NUM:api_invocations}, user agent: %{GREEDYDATA:user_agent}\]"
          SESSION_TYPE_4: "Event \[%{BASE10NUM:id}\] \[%{DATA}\] \[%{TIMESTAMP_ISO8601:timestamp}\] \[%{GREEDYDATA:event_code}\] \[%{WORD:log_level}\] \[%{DATA}\] \[%{DATA:hostname}\] \[%{BASE10NUM:id_2}\] \[SSH session was opened for '%{USER:username}@%{IP:ip_address}'\.\]"
          SESSION_TYPE_5: "Event \[%{BASE10NUM:id}\] \[%{DATA}\] \[%{TIMESTAMP_ISO8601:timestamp}\] \[%{GREEDYDATA:event_code}\] \[%{WORD:log_level}\] \[%{DATA}\] \[%{DATA:hostname}\] \[%{BASE10NUM:id_2}\] \[SSH session was closed for '%{USER:username}@%{IP:ip_address}'\.\]"
          SESSION_TYPE_6: "Event \[%{BASE10NUM:id}\] \[%{DATA}\] \[%{TIMESTAMP_ISO8601:timestamp}\] \[%{GREEDYDATA:event_code}\] \[%{WORD:log_level}\] \[%{DATA:hostname}\] \[%{DATA}\] \[%{BASE10NUM:id_2}\] \[User cannot logon since the user is %{GREEDYDATA:reason}\]"
          CONNECTIONS: "%{WORD:Event} \[%{INT:id}\] \[1-1\] \[%{TIMESTAMP_ISO8601:timestamp}\] \[%{DATA:event_code}\] \[%{WORD:log_level}\] \[(?:\[%{DATA}\])*\] \[%{DATA:hostname}\] \[%{INT:RepeatedId}\] \[Connected to %{HOSTNAME:source_address} in %{DATA}\]"
          FAULT: "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log_level} %{DATA:process}\[%{DATA:pid}\] \[%{DATA:originator_info}\] %{GREEDYDATA:reason};.*\((Fault cause: %{DATA:event_code})\\n-->"
          FAULT_TYPE_2: '%{TIMESTAMP_ISO8601:timestamp} %{WORD:log_level} %{DATA:process}\[%{DATA:pid}\] \[%{DATA:originator_info}\] \[%{DATA:process}\] -- ERROR %{DATA:error_id} -- %{DATA:component} -- %{GREEDYDATA:method_call}: %{DATA:event_code}:\\\\n--> Result:\\\\n--> \(%{DATA:result}\) \{\\\\n--> %{DATA:additional_data}\}\\\\n--> Args:\\\\n--> \\\\n--> Arg userName:\\\\n--> \\"%{DATA:username}\\"\\\\n--> Arg password:\\\\n--> \(not shown\)\\\\n--> \\\\n--> Arg locale:\\\\n--> \\"%{DATA:locale}\"'
          HTTP_LOGS_1: "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log_level} %{DATA:process}\[%{DATA:pid}\] \[Originator@%{DATA:originator_id} sub=%{DATA:sub}\] %{TIMESTAMP_ISO8601:datetime} %{WORD:http_method} %{URIPATH:url_path} HTTP/%{NUMBER:http_version} %{NUMBER:response_status} %{DATA:upstream_status} - %{NUMBER:size1} %{NUMBER:size2} %{NUMBER:unknown1} %{NUMBER:unknown2} %{NUMBER:unknown3} %{IP:source_ip}:%{NUMBER:client_port} %{IP:destination_ip}:%{NUMBER:server_port} %{IP:local_ip1}:%{NUMBER:local_port1} %{IP:local_ip2}:%{NUMBER:local_port2}"
          HTTP_LOGS_2: "\[%{HTTPDATE:timestamp}\] %{DATA:process} \[Request\] %{IP:client_ip}:%{NUMBER:client_port} to local %{NUMBER:destination_port} - HTTP/%{NUMBER:http_version} %{WORD:http_method} %{URIPATH:url_path} \[Response\] %{NUMBER:response_status} - %{NUMBER:response_bytes} bytes \[Perf\] process %{NUMBER:process_time}ms \/ commit %{NUMBER:commit_time}ms \/ conn \[%{DATA:conn_status}\]"
          OTHERS_EVENTS: "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log_level} %{DATA:process}\[%{INT:pid}\] %{GREEDYDATA:ignore} -- %{GREEDYDATA:reason}"
          OTHERS_EVENTS_TYPE_2: "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:log_level} %{DATA:process}\[%{INT:pid}\] %{DATA:ignore1} %{DATA:ignore2} -- (?<reason>(.*))"
          OTHERS_EVENTS_TYPE_3: "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] %{LOGLEVEL:log_level} %{DATA:operationID} %{DATA:process} - (?<reason>.*)"
          OTHERS_EVENTS_TYPE_4: "%{TIMESTAMP_ISO8601:timestamp}\+%{DATA}: %{DATA}: \[%{GREEDYDATA:reason}"
          OTHERS_EVENTS_TYPE_5: "%{GREEDYDATA:reason}"
          OTHERS_EVENTS_TYPE_6: "%{TIMESTAMP_ISO8601:timestamp}\] \[%{DATA:log_level}\] %{GREEDYDATA:reason}"
  - name: set_ecs_fields

stages:
  set_ecs_fields:
    actions:
      - set:
          timestamp: "{{parsed_event.message.timestamp}}"
          user.name: "{{parsed_event.message.username}}"
          source.ip: "{{parsed_event.message.source_ip}}"
          destination.ip: "{{parsed_event.message.destination_ip}}"
          source.user.name: "{{parsed_event.message.source_user_name}}"
          user_agent.original: "{{parsed_event.message.user_agent}}"
          host.name: "{{parsed_event.message.hostname}}"
          event.reason: "{{parsed_event.message.reason}}"
          log.level: "{{parsed_event.message.log_level}}"
          http.request.method: "{{parsed_event.message.http_method}}"
          url.path: "{{parsed_event.message.url_path}}"
          http.response.status_code: "{{parsed_event.message.response_status}}"
          http.response.bytes: "{{parsed_event.message.response_bytes}}"
          event.id: "{{parsed_event.message.id}}"
          event.code: "{{parsed_event.message.event_code}}"
          process.pid: "{{parsed_event.message.pid}}"
          process.end: "{{parsed_event.message.process_time}}"
          process.name: "{{parsed_event.message.process}}"
          client.port: "{{parsed_event.message.client_port}}"
          http.version: "{{parsed_event.message.http_version}}"
          destination.port: "{{parsed_event.message.destination_port}}"
          source.address: "{{parsed_event.message.source_address}}"
          client.geo.country_iso_code: "{{parsed_event.message.locale}}"
          host.ip: "{{parsed_event.message.local_ip1}}"
          network.port: "{{parsed_event.message.local_port1}}"
          vmware_vcenter.ip_address: "{{parsed_event.message.ip_address}}"
          vmware_vcenter.login_time: "{{parsed_event.message.login_time}}"
          vmware_vcenter.api_invocations: "{{parsed_event.message.api_invocations}}"
          vmware_vcenter.originator_info: "{{parsed_event.message.originator_info}}"
          vmware_vcenter.error_id: "{{parsed_event.message.error_id}}"
          vmware_vcenter.component: "{{parsed_event.message.component}}"
          vmware_vcenter.method_call: "{{parsed_event.message.method_call}}"
          vmware_vcenter.result: "{{parsed_event.message.result}}"
          vmware_vcenter.additional_data: "{{parsed_event.message.additional_data}}"
          vmware_vcenter.originator_id: "{{parsed_event.message.originator_id}}"
          vmware_vcenter.sub: "{{parsed_event.message.sub}}"
          vmware_vcenter.datetime: "{{parsed_event.message.datetime}}"
          vmware_vcenter.upstream_status: "{{parsed_event.message.upstream_status}}"
          vmware_vcenter.host.ip2: "{{parsed_event.message.local_ip2}}"
          vmware_vcenter.network.port2: "{{parsed_event.message.local_port2}}"
          vmware_vcenter.conn_status: "{{parsed_event.message.conn_status}}"
          vmware_vcenter.commit_time: "{{parsed_event.message.commit_time}}"
          vmware_vcenter.thread: "{{parsed_event.message.thread}}"


      - set:
          observer.vendor: "VMWare"
          observer.product: "VCenter"
          event.kind: "event"

