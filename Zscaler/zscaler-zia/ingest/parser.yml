name: withsecure-elements
pipeline:
  - name: json_event
    external:
      name: json.parse-json
      properties:
        input_field: "{{original.message}}"
        output_field: message

  - name: parse_datetime
    external:
      name: date.parse
      properties:
        input_field: "{{json_event.message.event.datetime}}"
        output_field: result

  - name: parse_time
    external:
      name: date.parse
      properties:
        input_field: "{{json_event.message.event.time}}"
        output_field: result

  - name: set_common_fields
  - name: set_event_category

stages:
  set_event_category:
    actions:
      - set:
          event.category: ["process"]
          event.type: ["info"]

      - set:
          event.category: ["network"]
          event.type: ["info"]
        filter: "{{json_event.message.get('sourcetype') == 'zscalernss-web' or json_event.message.get('sourcetype') == 'zscalernss-dns'}}"

      - set:
          event.category: ["network"]
          event.type: ["connection"]
        filter: "{{json_event.message.get('sourcetype') == 'zscalernss-fw'}}"

      - set:
          event.category: ["authentication"]
          event.type: ["start"]
        filter: "{{json_event.message.get('sourcetype') == 'zscalernss-audit' and json_event.message.event.action.lower() == 'sign_in'}}"

      - set:
          event.category: ["configuration"]
          event.type: ["change"]
        filter: "{{json_event.message.get('sourcetype') == 'zscalernss-audit' and json_event.message.event.action.lower() == 'update'}}"

  set_common_fields:
    actions:
      - set:
          "@timestamp": "{{parse_datetime.result or parse_time.result}}"
        filter: "{{parse_datetime.result != None}}"

      - set:
          "@timestamp": "{{parse_time.result}}"
        filter: "{{parse_time.result != None}}"

      - set:
          event.kind: "event"
          event.duration: "{{json_event.message.event.duration}}"
          event.action: "{{json_event.message.event.action | lower}}"

          zscaler.zia.event_id: "{{json_event.message.event.event_id}}"
          zscaler.zia.source_type: "{{json_event.message.sourcetype}}"
          zscaler.zia.action.result: "{{json_event.message.event.result}}"
          zscaler.zia.vendor: "{{json_event.message.event.vendor}}"
          zscaler.zia.product: "{{json_event.message.event.product}}"
          zscaler.zia.appname: "{{json_event.message.event.appname}}"
          zscaler.zia.category: "{{json_event.message.event.category}}"
          zscaler.zia.sub_category: "{{json_event.message.event.subcategory}}"
          zscaler.zia.department: "{{json_event.message.event.department}}"
          zscaler.zia.audit.log_type: "{{json_event.message.event.auditlogtype}}"
          zscaler.zia.resource: "{{json_event.message.event.resource}}"

          zscaler.zia.threat.name: "{{json_event.message.event.threatname}}"
          zscaler.zia.threat.class: "{{json_event.message.event.threatclass}}"
          zscaler.zia.threat.category: "{{json_event.message.event.threatcategory or json_event.message.event.threatcat}}"
          zscaler.zia.device.owner: "{{json_event.message.event.deviceowner}}"
          zscaler.zia.keyprotectiontype: "{{json_event.message.event.keyprotectiontype}}"
          zscaler.zia.tuntype: "{{json_event.message.event.tuntype}}"
          zscaler.zia.avgduration: "{{json_event.message.event.avgduration}}"

          http.request.method: "{{json_event.message.event.requestmethod}}"
          http.request.bytes: "{{json_event.message.event.requestsize}}"
          http.request.referrer: "{{json_event.message.event.referrerURL}}"
          http.response.status_code: "{{json_event.message.properties.status}}"
          http.response.bytes: "{{json_event.message.event.responsesize}}"
          http.response.mime_type: "{{json_event.message.event.contenttype}}"

          server.ip: "{{json_event.message.event.serverip}}"

          network.application: "{{json_event.message.event.applicationname}}"

          user_agent.original: "{{json_event.message.event.useragent}}"

          organization.name: "{{json_event.message.event.company}}"

          file.type: "{{json_event.message.event.filetype}}"
          file.name: "{{json_event.message.event.filename or json_event.message.event.object_name_1}}"
          file.directory: "{{json_event.message.event.filesource}}"
          file.hash.md5: "{{json_event.message.event.filemd5}}"

          url.domain: "{{json_event.message.event.url}}"
          url.original: "{{json_event.message.event.fillurl}}"

          user.email: "{{json_event.message.event.user or json_event.message.event.login}}"
          network.protocol: "{{json_event.message.event.protocol or json_event.message.event.proto}}"

          source.ip: "{{json_event.message.event.ClientIP or json_event.message.event.clientip or json_event.message.event.clt_sip or json_event.message.event.csip}}"
          source.port: "{{json_event.message.event.csport}}"
          source.bytes: "{{json_event.message.event.inbytes}}"

          destination.port: "{{json_event.message.event.srv_dport or json_event.message.event.sdport}}"
          destination.ip: "{{json_event.message.event.srv_dip or json_event.message.event.sdip}}"
          destination.bytes: "{{json_event.message.event.outbytes}}"
          destination.geo.country_name: "{{json_event.message.event.destcountry}}"

          dns.question.name: "{{json_event.message.event.dns_req}}"
          dns.response_code: "{{json_event.message.event.dns_resp}}"
          dns.question.type: "{{json_event.message.event.dns_reqtype}}"

          host.name: "{{json_event.message.event.hostname or json_event.message.event.devicehostname}}"

      - translate:
        dictionary:
          "zscalernss-audit": "audit"
          "zscalernss-casb": "casb"
          "zscalernss-dns": "dns"
          "zscalernss-fw": "firewall"
          "zscalernss-web": "web"
        mapping:
          json_event.message.sourcetype: event.dataset
