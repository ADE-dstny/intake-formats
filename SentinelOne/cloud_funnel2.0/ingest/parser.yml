name: cloudfunnel2.0
pipeline:
  - name: json_event
    external:
      name: json.parse-json
      properties:
        input_field: "{{original.message}}"

  # Time conversions
  - name: convert_timestamp
    filter: '{{json_event.message.get("@timestamp") != None}}'
    external:
      name: date.parse
      properties:
        input_field: '{{json_event.message["@timestamp"]}}'
        output_field: start_date
        format: timestamp

  - name: convert_process_exec_start
    filter: "{{json_event.message.event.source != null and json_event.message.event.source.executable.creationTime.millisecondsSinceEpoch != null and json_event.message.event.source.executable.creationTime.millisecondsSinceEpoch | length == 13}}"
    external:
      name: date.parse
      properties:
        input_field: "{{json_event.message.event.source.executable.creationTime.millisecondsSinceEpoch[:-3]}}.{{json_event.message.event.source.executable.creationTime.millisecondsSinceEpoch[-3:]}}"
        output_field: start_date
        format: timestamp

  - name: convert_source_process_start
    filter: "{{json_event.message.event.source != null and json_event.message.event.source.fullPid.startTime.millisecondsSinceEpoch != null and json_event.message.event.source.fullPid.startTime.millisecondsSinceEpoch | length == 13}}"
    external:
      name: date.parse
      properties:
        input_field: "{{json_event.message.event.source.fullPid.startTime.millisecondsSinceEpoch[:-3]}}.{{json_event.message.event.source.fullPid.startTime.millisecondsSinceEpoch[-3:]}}"
        output_field: start_date
        format: timestamp

  - name: convert_process_start
    filter: "{{json_event.message.event.process != null and json_event.message.event.process.fullPid.startTime.millisecondsSinceEpoch != null and json_event.message.event.process.fullPid.startTime.millisecondsSinceEpoch | length == 13}}"
    external:
      name: date.parse
      properties:
        input_field: "{{json_event.message.event.process.fullPid.startTime.millisecondsSinceEpoch[:-3]}}.{{json_event.message.event.process.fullPid.startTime.millisecondsSinceEpoch[-3:]}}"
        output_field: start_date
        format: timestamp

  - name: convert_parent_process_start
    filter: "{{json_event.message.event.parent != null and json_event.message.event.parent.fullPid.startTime.millisecondsSinceEpoch != null and json_event.message.event.parent.fullPid.startTime.millisecondsSinceEpoch | length == 13}}"
    external:
      name: date.parse
      properties:
        input_field: "{{json_event.message.event.parent.fullPid.startTime.millisecondsSinceEpoch[:-3]}}.{{json_event.message.event.parent.fullPid.startTime.millisecondsSinceEpoch[-3:]}}"
        output_field: start_date
        format: timestamp

  - name: convert_target_process_start
    filter: "{{json_event.message.event.target != null and json_event.message.event.target.fullPid.startTime.millisecondsSinceEpoch != null and json_event.message.event.target.fullPid.startTime.millisecondsSinceEpoch | length == 13}}"
    external:
      name: date.parse
      properties:
        input_field: "{{json_event.message.event.target.fullPid.startTime.millisecondsSinceEpoch[:-3]}}.{{json_event.message.event.target.fullPid.startTime.millisecondsSinceEpoch[-3:]}}"
        output_field: start_date
        format: timestamp

  - name: convert_file_creation_time
    filter: "{{json_event.message.event.file != null and json_event.message.event.file.creationTime.millisecondsSinceEpoch != null and json_event.message.event.file.creationTime.millisecondsSinceEpoch | length == 13}}"
    external:
      name: date.parse
      properties:
        input_field: "{{json_event.message.event.file.creationTime.millisecondsSinceEpoch[:-3]}}.{{json_event.message.event.file.creationTime.millisecondsSinceEpoch[-3:]}}"
        output_field: start_date
        format: timestamp

  - name: convert_target_file_creation_time
    filter: "{{json_event.message.event.targetFile != null and json_event.message.event.targetFile.creationTime.millisecondsSinceEpoch != null and json_event.message.event.targetFile.creationTime.millisecondsSinceEpoch | length == 13}}"
    external:
      name: date.parse
      properties:
        input_field: "{{json_event.message.event.targetFile.creationTime.millisecondsSinceEpoch[:-3]}}.{{json_event.message.event.targetFile.creationTime.millisecondsSinceEpoch[-3:]}}"
        output_field: start_date
        format: timestamp

  # File extractions
  - name: find_target_file_name
    filter: '{{json_event.message.event.targetFile != null and json_event.message.event.targetFile.isDir == "E_FALSE"}}'
    external:
      name: grok.match
      properties:
        input_field: json_event.message.event.targetFile.path
        output_field: file
        pattern: '%{GREEDYDATA}[\\\/]+%{GREEDYDATA:name}$'

  - name: find_dll_name
    filter: '{{json_event.message.event.path != null}}'
    external:
      name: grok.match
      properties:
        input_field: json_event.message.event.path
        output_field: file
        pattern: '%{GREEDYDATA}[\\\/]+%{GREEDYDATA:name}$'

  - name: find_reg_value_key_name
    filter: '{{json_event.message.event.regValue != null and json_event.message.event.regValue.path != null}}'
    external:
      name: grok.match
      properties:
        input_field: json_event.message.event.regValue.path
        output_field: key
        pattern: '%{GREEDYDATA}[\\\/]+%{GREEDYDATA:name}$'

  - name: find_reg_key_name
    filter: '{{json_event.message.event.regKey != null and json_event.message.event.regKey.path != null}}'
    external:
      name: grok.match
      properties:
        input_field: json_event.message.event.regKey.path
        output_field: key
        pattern: '%{GREEDYDATA}[\\\/]+%{GREEDYDATA:name}$'

  - name: set_meta_fields

  - name: set_common_fields

  - name: set_source_fields
    filter: "{{json_event.message.event.source != null}}"

  - name: set_process_fields
    filter: "{{json_event.message.event.process != null}}"

  - name: set_ip_fields
    filter: "{{json_event.message.event.sourceAddress != null or json_event.message.event.destinationAddress != null}}"

  - name: set_source_parent_fields
    filter: "{{json_event.message.event.source != null and json_event.message.event.source.parent != null}}"

  - name: set_parent_fields
    filter: "{{json_event.message.event.parent != null}}"

  - name: set_target_fields
    filter: "{{json_event.message.event.target != null}}"

  - name: set_dns_fields
    filter: '{{json_event.message.event.type == "dns"}}'

  - name: set_module_load_fields
    filter: '{{json_event.message.event.type == "moduleLoad"}}'

  - name: set_process_signature
    filter: "{{json_event.message.event.process != null and json_event.message.event.signature != null}}"

  - name: set_file_signature
    filter: "{{json_event.message.event.file != null and json_event.message.event.signature != null}}"

  - name: set_file_fields
    filter: "{{json_event.message.event.file != null }}"

  - name: set_kernel_fields
    filter: "{{json_event.message.event.isKernelModule != null }}"

  - name: set_target_file_fields
    filter: "{{json_event.message.event.targetFile != null}}"

  - name: set_reg_value_fields
    filter: "{{json_event.message.event.regValue != null}}"

  - name: set_reg_key_fields
    filter: "{{json_event.message.event.regKey != null}}"

  - name: set_script_fields
    filter: '{{json_event.message.event.type == "scripts"}}'

  - name: set_http_fields
    filter: '{{json_event.message.event.type == "http"}}'

  - name: set_indicator_fields
    filter: '{{json_event.message.event.type == "behavioralIndicators"}}'

stages:

  set_meta_fields:
    actions:
      - set:
          agent.version: "{{json_event.message.meta.agentVersion}}"
          deepvisibility.agent.managment_url: "{{json_event.message.meta.mgmtUrl}}"
          deepvisibility.agent.seq_id: "{{json_event.message.meta.seqId}}"
          deepvisibility.agent.trace_id: "{{json_event.message.meta.traceId}}"
          deepvisibility.agent.uuid: "{{json_event.message.meta.uuid}}"
          deepvisibility.event.type: "{{json_event.message.event.type}}"
          event.action: "{{json_event.message.event.type}}"
          deepvisibility.host.os.revision: "{{json_event.message.meta.osRevision}}"
          deepvisibility.true_context.key: "{{json_event.message.event.trueContext.key.value}}"
          host.name: "{{json_event.message.meta.computerName}}"
          host.os.family: "{{json_event.message.meta.osFamily}}"
          host.os.name: "{{json_event.message.meta.osName}}"
          host.type: "{{json_event.message.meta.machineType}}"
      - set:
          event.start: "{{convert_timestamp.start_date}}"

  set_common_fields:
    actions:
      - set:
          deepvisibility.process.relations: "{{ json_event.message.event.relations }}"
          deepvisibility.process.desired_access: "{{ json_event.message.event.desiredAccess }}"
          deepvisibility.scheduled_task.name: "{{ json_event.message.event.taskName }}"
          deepvisibility.scheduled_task.trigger_type: "{{ json_event.message.event.triggerType }}"
          process.exit_code: "{{ json_event.message.event.exitCode }}"
      - set:
          file.hash.md5: "{{ json_event.message.event.hashes.md5 }}"
          file.hash.sha1: "{{ json_event.message.event.hashes.sha1 }}"
          file.hash.sha256: "{{ json_event.message.event.hashes.sha256 }}"
        filter: "{{json_event.message.event.hashes != null }}"

  set_source_fields:
    actions:
      - set:
          deepvisibility.process.counters.cross_process_dup_process_handle: "{{json_event.message.event.source.counters.crossProcessDupProcessHandle}}"
          deepvisibility.process.counters.cross_process_dup_thread_handle: "{{json_event.message.event.source.counters.crossProcessDupThreadHandle}}"
          deepvisibility.process.counters.cross_process: "{{json_event.message.event.source.counters.crossProcess}}"
          deepvisibility.process.counters.dns_lookups: "{{json_event.message.event.source.counters.dnsLookups}}"
          deepvisibility.process.counters.file_creation: "{{json_event.message.event.source.counters.fileCreation}}"
          deepvisibility.process.counters.file_deletion: "{{json_event.message.event.source.counters.fileDeletion}}"
          deepvisibility.process.counters.file_modification: "{{json_event.message.event.source.counters.fileModification}}"
          deepvisibility.process.counters.model_child_process: "{{json_event.message.event.source.counters.modelChildProcess}}"
          deepvisibility.process.counters.module_load: "{{json_event.message.event.source.counters.moduleLoad}}"
          deepvisibility.process.counters.net_conn_out: "{{json_event.message.event.source.counters.netConnOut}}"
          deepvisibility.process.counters.os_child_process: "{{json_event.message.event.source.counters.osChildProcess}}"
          deepvisibility.process.counters.registry_modification: "{{json_event.message.event.source.counters.registryModification}}"
          deepvisibility.process.excluded: "{{json_event.message.event.source.excluded}}"
          deepvisibility.process.executable.is_dir: "{{json_event.message.event.source.executable.isDir}}"
          deepvisibility.process.executable.name: "{{json_event.message.event.source.executable.path}}"
          deepvisibility.process.executable.node.key: "{{json_event.message.event.source.executable.node.key.value}}"
          deepvisibility.process.executable.signature.signed.identity: "{{json_event.message.event.source.executable.signature.signed.identity}}"
          deepvisibility.process.executable.size_bytes: "{{json_event.message.event.source.executable.sizeBytes}}"
          deepvisibility.process.executable.start: "{{json_event.message.event.source.executable.creationTime.millisecondsSinceEpoch}}"
          deepvisibility.process.family: "{{json_event.message.event.source.subsystem}}"
          deepvisibility.process.integrity_level: "{{json_event.message.event.source.integrityLevel}}"
          deepvisibility.process.interactive: "{{json_event.message.event.source.interactive}}"
          deepvisibility.process.is_redirected_command_processor: "{{json_event.message.event.source.isRedirectedCommandProcessor}}"
          deepvisibility.process.is_wow64: "{{json_event.message.event.source.isWow64}}"
          deepvisibility.process.node.key: "{{json_event.message.event.source.node.key.value}}"
          deepvisibility.process.parent.node.key: "{{json_event.message.event.source.parent.node.key.value}}"
          deepvisibility.process.root: "{{json_event.message.event.source.root}}"
          deepvisibility.process.session_id: "{{json_event.message.event.source.sessionId}}"
          deepvisibility.process.true_context.key: "{{json_event.message.event.source.trueContext.key.value}}"
          deepvisibility.process.user.sid: "{{json_event.message.event.source.user.sid}}"
          process.command_line: "{{json_event.message.event.source.commandLine}}"
          process.title: "{{json_event.message.event.source.name | trim}}"
          process.executable: "{{json_event.message.event.source.executable.path}}"
          process.pid: "{{json_event.message.event.source.fullPid.pid}}"
          process.working_directory: '{{json_event.message.event.source.executable.path.split("\\")[0:-1] | join("\\") }}'
          process.hash.md5: "{{json_event.message.event.source.executable.hashes.md5}}"
          process.hash.sha1: "{{json_event.message.event.source.executable.hashes.sha1}}"
          process.hash.sha256: "{{json_event.message.event.source.executable.hashes.sha256}}"
          user.name: "{{json_event.message.event.source.user.name}}"
          user.id: "{{json_event.message.event.source.user.sid}}"
      - set:
          process.start: "{{convert_source_process_start.start_date}}"
        filter: '{{ convert_source_process_start != null }}'
      - set:
          deepvisibility.process.executable.start: "{{convert_process_exec_start.start_date}}"
        filter: '{{ convert_process_exec_start != null }}'
      - set:
          process.name: "{{json_event.message.event.source.executable.path | basename}}"

  set_process_fields:
    actions:
      - set:
          deepvisibility.process.counters.cross_process_dup_process_handle: "{{json_event.message.event.process.counters.crossProcessDupProcessHandle}}"
          deepvisibility.process.counters.cross_process_dup_thread_handle: "{{json_event.message.event.process.counters.crossProcessDupThreadHandle}}"
          deepvisibility.process.counters.cross_process: "{{json_event.message.event.process.counters.crossProcess}}"
          deepvisibility.process.counters.dns_lookups: "{{json_event.message.event.process.counters.dnsLookups}}"
          deepvisibility.process.counters.file_creation: "{{json_event.message.event.process.counters.fileCreation}}"
          deepvisibility.process.counters.file_deletion: "{{json_event.message.event.process.counters.fileDeletion}}"
          deepvisibility.process.counters.file_modification: "{{json_event.message.event.process.counters.fileModification}}"
          deepvisibility.process.counters.model_child_process: "{{json_event.message.event.process.counters.modelChildProcess}}"
          deepvisibility.process.counters.module_load: "{{json_event.message.event.process.counters.moduleLoad}}"
          deepvisibility.process.counters.net_conn_out: "{{json_event.message.event.process.counters.netConnOut}}"
          deepvisibility.process.counters.os_child_process: "{{json_event.message.event.process.counters.osChildProcess}}"
          deepvisibility.process.counters.registry_modification: "{{json_event.message.event.process.counters.registryModification}}"
          deepvisibility.process.excluded: "{{json_event.message.event.process.excluded}}"
          deepvisibility.process.executable.is_dir: "{{json_event.message.event.process.executable.isDir}}"
          deepvisibility.process.executable.name: "{{json_event.message.event.process.executable.path}}"
          deepvisibility.process.executable.node.key: "{{json_event.message.event.process.executable.node.key.value}}"
          deepvisibility.process.executable.signature.signed.identity: "{{json_event.message.event.process.executable.signature.signed.identity}}"
          deepvisibility.process.executable.size_bytes: "{{json_event.message.event.process.executable.sizeBytes}}"
          deepvisibility.process.executable.start: "{{json_event.message.event.process.executable.creationTime.millisecondsSinceEpoch}}"
          deepvisibility.process.family: "{{json_event.message.event.process.subsystem}}"
          deepvisibility.process.integrity_level: "{{json_event.message.event.process.integrityLevel}}"
          deepvisibility.process.interactive: "{{json_event.message.event.process.interactive}}"
          deepvisibility.process.is_redirected_command_processor: "{{json_event.message.event.process.isRedirectedCommandProcessor}}"
          deepvisibility.process.is_wow64: "{{json_event.message.event.process.isWow64}}"
          deepvisibility.process.node.key: "{{json_event.message.event.process.node.key.value}}"
          deepvisibility.process.parent.node.key: "{{json_event.message.event.process.parent.node.key.value}}"
          deepvisibility.process.root: "{{json_event.message.event.process.root}}"
          deepvisibility.process.session_id: "{{json_event.message.event.process.sessionId}}"
          deepvisibility.process.true_context.key: "{{json_event.message.event.process.trueContext.key.value}}"
          deepvisibility.process.user.sid: "{{json_event.message.event.process.user.sid}}"
          process.command_line: "{{json_event.message.event.process.commandLine}}"
          process.executable: "{{json_event.message.event.process.executable.path}}"
          process.title: "{{json_event.message.event.process.name | trim}}"
          process.pid: "{{json_event.message.event.process.fullPid.pid}}"
          process.working_directory: '{{json_event.message.event.process.executable.path.split("\\")[0:-1] | join("\\")}}'
          process.hash.md5: "{{json_event.message.event.process.executable.hashes.md5}}"
          process.hash.sha1: "{{json_event.message.event.process.executable.hashes.sha1}}"
          process.hash.sha256: "{{json_event.message.event.process.executable.hashes.sha256}}"
          user.name: "{{json_event.message.event.process.user.name}}"
          user.id: "{{json_event.message.event.process.user.sid}}"
      - set:
          process.start: "{{convert_process_start.start_date}}"
        filter: '{{ convert_process_start != null }}'
      - set:
          process.name: "{{json_event.message.event.process.executable.path | basename}}"

  set_parent_fields:
    actions:
      - set:
          deepvisibility.process.parent.counters.cross_process_dup_process_handle: "{{json_event.message.event.parent.counters.crossProcessDupProcessHandle}}"
          deepvisibility.process.parent.counters.cross_process_dup_thread_handle: "{{json_event.message.event.parent.counters.crossProcessDupThreadHandle}}"
          deepvisibility.process.parent.counters.cross_process: "{{json_event.message.event.parent.counters.crossProcess}}"
          deepvisibility.process.parent.counters.dns_lookups: "{{json_event.message.event.parent.counters.dnsLookups}}"
          deepvisibility.process.parent.counters.file_creation: "{{json_event.message.event.parent.counters.fileCreation}}"
          deepvisibility.process.parent.counters.file_deletion: "{{json_event.message.event.parent.counters.fileDeletion}}"
          deepvisibility.process.parent.counters.file_modification: "{{json_event.message.event.parent.counters.fileModification}}"
          deepvisibility.process.parent.counters.model_child_process: "{{json_event.message.event.parent.counters.modelChildProcess}}"
          deepvisibility.process.parent.counters.module_load: "{{json_event.message.event.parent.counters.moduleLoad}}"
          deepvisibility.process.parent.counters.net_conn_out: "{{json_event.message.event.parent.counters.netConnOut}}"
          deepvisibility.process.parent.counters.os_child_process: "{{json_event.message.event.parent.counters.osChildProcess}}"
          deepvisibility.process.parent.counters.registry_modification: "{{json_event.message.event.parent.counters.registryModification}}"
          deepvisibility.process.parent.excluded: "{{json_event.message.event.parent.excluded}}"
          deepvisibility.process.parent.executable.is_dir: "{{json_event.message.event.parent.executable.isDir}}"
          deepvisibility.process.parent.executable.name: "{{json_event.message.event.parent.executable.path}}"
          deepvisibility.process.parent.executable.node.key: "{{json_event.message.event.parent.executable.node.key.value}}"
          deepvisibility.process.parent.executable.signature.signed.identity: "{{json_event.message.event.parent.executable.signature.signed.identity}}"
          deepvisibility.process.parent.executable.size_bytes: "{{json_event.message.event.parent.executable.sizeBytes}}"
          deepvisibility.process.parent.executable.start: "{{json_event.message.event.parent.executable.creationTime.millisecondsSinceEpoch}}"
          deepvisibility.process.parent.family: "{{json_event.message.event.parent.subsystem}}"
          deepvisibility.process.parent.integrity_level: "{{json_event.message.event.parent.integrityLevel}}"
          deepvisibility.process.parent.interactive: "{{json_event.message.event.parent.interactive}}"
          deepvisibility.process.parent.is_redirected_command_processor: "{{json_event.message.event.parent.isRedirectedCommandProcessor}}"
          deepvisibility.process.parent.is_wow64: "{{json_event.message.event.parent.isWow64}}"
          deepvisibility.process.parent.node.key: "{{json_event.message.event.parent.node.key.value}}"
          deepvisibility.process.parent.parent.node.key: "{{json_event.message.event.parent.parent.node.key.value}}"
          deepvisibility.process.parent.root: "{{json_event.message.event.parent.root}}"
          deepvisibility.process.parent.session_id: "{{json_event.message.event.parent.sessionId}}"
          deepvisibility.process.parent.true_context.key: "{{json_event.message.event.parent.trueContext.key.value}}"
          deepvisibility.process.parent.user.sid: "{{json_event.message.event.parent.user.sid}}"
          process.parent.command_line: "{{json_event.message.event.parent.commandLine}}"
          process.parent.title: "{{json_event.message.event.parent.name | trim}}"
          process.parent.pid: "{{json_event.message.event.parent.fullPid.pid}}"
          process.parent.executable: "{{json_event.message.event.parent.executable.path}}"

          process.parent.hash.md5: "{{json_event.message.event.parent.executable.hashes.md5}}"
          process.parent.hash.sha1: "{{json_event.message.event.parent.executable.hashes.sha1}}"
          process.parent.hash.sha256: "{{json_event.message.event.parent.executable.hashes.sha256}}"
      - set:
          process.parent.start: "{{convert_parent_process_start.start_date}}"
        filter: '{{ convert_parent_process_start != null }}'
      - set:
          process.parent.name: "{{json_event.message.event.parent.executable.path.split('\\\\') | last | lower}}"
          process.parent.working_directory: '{{json_event.message.event.parent.executable.path.split("\\")[0:-1] | join("\\") }}'
        filter: '{{json_event.message.event.parent.executable != null and json_event.message.event.parent.executable.path != null}}'

  set_target_fields:
    actions:
      - set:
          deepvisibility.process.target.counters.cross_process_dup_process_handle: "{{json_event.message.event.target.counters.crossProcessDupProcessHandle}}"
          deepvisibility.process.target.counters.cross_process_dup_thread_handle: "{{json_event.message.event.target.counters.crossProcessDupThreadHandle}}"
          deepvisibility.process.target.counters.cross_process: "{{json_event.message.event.target.counters.crossProcess}}"
          deepvisibility.process.target.counters.dns_lookups: "{{json_event.message.event.target.counters.dnsLookups}}"
          deepvisibility.process.target.counters.file_creation: "{{json_event.message.event.target.counters.fileCreation}}"
          deepvisibility.process.target.counters.file_deletion: "{{json_event.message.event.target.counters.fileDeletion}}"
          deepvisibility.process.target.counters.file_modification: "{{json_event.message.event.target.counters.fileModification}}"
          deepvisibility.process.target.counters.model_child_process: "{{json_event.message.event.target.counters.modelChildProcess}}"
          deepvisibility.process.target.counters.module_load: "{{json_event.message.event.target.counters.moduleLoad}}"
          deepvisibility.process.target.counters.net_conn_out: "{{json_event.message.event.target.counters.netConnOut}}"
          deepvisibility.process.target.counters.os_child_process: "{{json_event.message.event.target.counters.osChildProcess}}"
          deepvisibility.process.target.counters.registry_modification: "{{json_event.message.event.target.counters.registryModification}}"
          deepvisibility.process.target.excluded: "{{json_event.message.event.target.excluded}}"
          deepvisibility.process.target.executable.is_dir: "{{json_event.message.event.target.executable.isDir}}"
          deepvisibility.process.target.executable.name: "{{json_event.message.event.target.executable.path}}"
          deepvisibility.process.target.executable.node.key: "{{json_event.message.event.target.executable.node.key.value}}"
          deepvisibility.process.target.executable.signature.signed.identity: "{{json_event.message.event.target.executable.signature.signed.identity}}"
          deepvisibility.process.target.executable.size_bytes: "{{json_event.message.event.target.executable.sizeBytes}}"
          deepvisibility.process.target.executable.start: "{{json_event.message.event.target.executable.creationTime.millisecondsSinceEpoch}}"
          deepvisibility.process.target.family: "{{json_event.message.event.target.subsystem}}"
          deepvisibility.process.target.integrity_level: "{{json_event.message.event.target.integrityLevel}}"
          deepvisibility.process.target.interactive: "{{json_event.message.event.target.interactive}}"
          deepvisibility.process.target.is_redirected_command_processor: "{{json_event.message.event.target.isRedirectedCommandProcessor}}"
          deepvisibility.process.target.is_wow64: "{{json_event.message.event.target.isWow64}}"
          deepvisibility.process.target.node.key: "{{json_event.message.event.target.node.key.value}}"
          deepvisibility.process.target.parent.node.key: "{{json_event.message.event.target.parent.node.key.value}}"
          deepvisibility.process.target.root: "{{json_event.message.event.target.root}}"
          deepvisibility.process.target.session_id: "{{json_event.message.event.target.sessionId}}"
          deepvisibility.process.target.true_context.key: "{{json_event.message.event.target.trueContext.key.value}}"
          deepvisibility.process.target.user.sid: "{{json_event.message.event.target.user.sid}}"
          deepvisibility.process.target.command_line: "{{json_event.message.event.target.commandLine}}"
          deepvisibility.process.target.name: "{{json_event.message.event.target.name}}"
          deepvisibility.process.target.pid: "{{json_event.message.event.target.fullPid.pid}}"
          deepvisibility.process.target.executable: "{{json_event.message.event.process.executable.path}}"
          deepvisibility.process.target.working_directory: '{{json_event.message.event.target.executable.path.split("\\")[0:-1] | join("\\") }}'
          deepvisibility.process.target.hash.md5: "{{json_event.message.event.target.executable.hashes.md5}}"
          deepvisibility.process.target.hash.sha1: "{{json_event.message.event.target.executable.hashes.sha1}}"
          deepvisibility.process.target.hash.sha256: "{{json_event.message.event.target.executable.hashes.sha256}}"
      - set:
          deepvisibility.process.target.start: "{{convert_target_process_start.start_date}}"
        filter: '{{ convert_target_process_start != null }}'

  set_source_parent_fields:
    actions:
      - set:
          deepvisibility.process.parent.counters.cross_process_dup_process_handle: "{{json_event.message.event.source.parent.counters.crossProcessDupProcessHandle}}"
          deepvisibility.process.parent.counters.cross_process_dup_thread_handle: "{{json_event.message.event.source.parent.counters.crossProcessDupThreadHandle}}"
          deepvisibility.process.parent.counters.cross_process: "{{json_event.message.event.source.parent.counters.crossProcess}}"
          deepvisibility.process.parent.counters.dns_lookups: "{{json_event.message.event.source.parent.counters.dnsLookups}}"
          deepvisibility.process.parent.counters.file_creation: "{{json_event.message.event.source.parent.counters.fileCreation}}"
          deepvisibility.process.parent.counters.file_deletion: "{{json_event.message.event.source.parent.counters.fileDeletion}}"
          deepvisibility.process.parent.counters.file_modification: "{{json_event.message.event.source.parent.counters.fileModification}}"
          deepvisibility.process.parent.counters.model_child_process: "{{json_event.message.event.source.parent.counters.modelChildProcess}}"
          deepvisibility.process.parent.counters.module_load: "{{json_event.message.event.source.parent.counters.moduleLoad}}"
          deepvisibility.process.parent.counters.net_conn_out: "{{json_event.message.event.source.parent.counters.netConnOut}}"
          deepvisibility.process.parent.counters.os_child_process: "{{json_event.message.event.source.parent.counters.osChildProcess}}"
          deepvisibility.process.parent.counters.registry_modification: "{{json_event.message.event.source.parent.counters.registryModification}}"
          deepvisibility.process.parent.excluded: "{{json_event.message.event.source.parent.excluded}}"
          deepvisibility.process.parent.executable.is_dir: "{{json_event.message.event.source.parent.executable.isDir}}"
          deepvisibility.process.parent.executable.name: "{{json_event.message.event.source.parent.executable.path}}"
          deepvisibility.process.parent.executable.node.key: "{{json_event.message.event.source.parent.executable.node.key.value}}"
          deepvisibility.process.parent.executable.signature.signed.identity: "{{json_event.message.event.source.parent.executable.signature.signed.identity}}"
          deepvisibility.process.parent.executable.size_bytes: "{{json_event.message.event.source.parent.executable.sizeBytes}}"
          deepvisibility.process.parent.executable.start: "{{json_event.message.event.source.parent.executable.creationTime.millisecondsSinceEpoch}}"
          deepvisibility.process.parent.family: "{{json_event.message.event.source.parent.subsystem}}"
          deepvisibility.process.parent.integrity_level: "{{json_event.message.event.source.parent.integrityLevel}}"
          deepvisibility.process.parent.interactive: "{{json_event.message.event.source.parent.interactive}}"
          deepvisibility.process.parent.is_redirected_command_processor: "{{json_event.message.event.source.parent.isRedirectedCommandProcessor}}"
          deepvisibility.process.parent.is_wow64: "{{json_event.message.event.source.parent.isWow64}}"
          deepvisibility.process.parent.node.key: "{{json_event.message.event.source.parent.node.key.value}}"
          deepvisibility.process.parent.parent.node.key: "{{json_event.message.event.source.parent.parent.node.key.value}}"
          deepvisibility.process.parent.root: "{{json_event.message.event.source.parent.root}}"
          deepvisibility.process.parent.session_id: "{{json_event.message.event.source.parent.sessionId}}"
          deepvisibility.process.parent.true_context.key: "{{json_event.message.event.source.parent.trueContext.key.value}}"
          deepvisibility.process.parent.user.sid: "{{json_event.message.event.source.parent.user.sid}}"
          process.parent.command_line: "{{json_event.message.event.source.parent.commandLine}}"
          process.parent.title: "{{json_event.message.event.source.parent.name | trim}}"
          process.parent.pid: "{{json_event.message.event.source.parent.fullPid.pid}}"
          process.parent.hash.md5: "{{json_event.message.event.source.parent.executable.hashes.md5}}"
          process.parent.hash.sha1: "{{json_event.message.event.source.parent.executable.hashes.sha1}}"
          process.parent.hash.sha256: "{{json_event.message.event.source.parent.executable.hashes.sha256}}"
      - set:
          process.parent.name: "{{json_event.message.event.source.parent.executable.path.split('\\\\') | last | lower}}"
          process.parent.working_directory: '{{json_event.message.event.source.parent.executable.path.split("\\")[0:-1] | join("\\") }}'
        filter: '{{json_event.message.event.source.parent.executable != null and json_event.message.event.source.parent.executable.path != null}}'

  set_ip_fields:
    actions:
      - set:
          source.address: "{{json_event.message.event.sourceAddress.address}}"
          source.ip: "{{json_event.message.event.sourceAddress.address}}"
          source.port: "{{json_event.message.event.sourceAddress.port}}"
        filter: '{{ json_event.message.event.sourceAddress != null }}'

      - set:
          destination.address: "{{json_event.message.event.destinationAddress.address}}"
          destination.ip: "{{json_event.message.event.destinationAddress.address}}"
          destination.port: "{{json_event.message.event.destinationAddress.port}}"
        filter: '{{ json_event.message.event.destinationAddress != null }}'

      - set:
          network.direction: "inbound"
        filter: '{{ json_event.message.event.direction == "INCOMING" }}'
      - set:
          network.direction: "outbound"
        filter: '{{ json_event.message.event.direction == "OUTGOING" }}'

  set_dns_fields:
    actions:
      - set:
          dns.question.name: "{{json_event.message.event.query}}"
          deepvisibility.dns.answers.results: "{{json_event.message.event.results}}"

  set_module_load_fields:
    actions:
      - set:
          dll.path: "{{json_event.message.event.path}}"
          dll.name: "{{find_dll_name.file.name}}"

  set_target_file_fields:
    actions:
      - set:
          deepvisibility.file.location: "{{json_event.message.event.targetFile.fileLocation}}"
          deepvisibility.file.node.key: "{{json_event.message.event.targetFile.node.key.value}}"
          file.owner: "{{json_event.message.event.targetFile.owner.name}}"
          file.path: "{{json_event.message.event.targetFile.path}}"
          file.size: "{{json_event.message.event.targetFile.sizeBytes}}"
          file.uid: "{{json_event.message.event.targetFile.owner.sid}}"
      - set:
          file.type: "dir"
        filter: '{{json_event.message.event.targetFile.isDir != null and json_event.message.event.targetFile.isDir != "E_FALSE"}}'
      - set:
          file.type: "file"
        filter: '{{json_event.message.event.targetFile.isDir == "E_FALSE"}}'
      - set:
          file.name: '{{json_event.message.event.targetFile.path.split("\\") | last }}'
          file.extension: "{{json_event.message.event.targetFile.path.split('.')|last}}"
        filter: '{{json_event.message.event.targetFile != null and json_event.message.event.targetFile.isDir == "E_FALSE"}}'

      - set:
          file.created: "{{convert_target_file_creation_time.start_date}}"
        filter: '{{convert_target_file_creation_time != null }}'


  set_process_signature:
    actions:
      - set:
          process.code_signature.subject_name: "{{json_event.message.event.signature.signed.identity}}"
          process.code_signature.exists: true
        filter: '{{ json_event.message.event.signature.signed != null }}'
      - set:
          process.code_signature.valid: true
        filter: '{{ json_event.message.event.signature.signed != null and json_event.message.event.signature.signed.valid != null }}'
      - set:
          process.code_signature.valid: false
        filter: '{{ json_event.message.event.signature.signed != null and json_event.message.event.signature.signed.invalid != null }}'

  set_file_signature:
    actions:
      - set:
          file.code_signature.subject_name: "{{json_event.message.event.signature.signed.identity}}"
          file.code_signature.exists: true
        filter: '{{ json_event.message.event.signature.signed != null }}'
      - set:
          file.code_signature.valid: true
        filter: '{{ json_event.message.event.signature.signed.valid != null }}'
      - set:
          file.code_signature.valid: false
        filter: '{{ json_event.message.event.signature.signed.invalid != null }}'

  set_file_fields:
    actions:
      - set:
          file.path: "{{ json_event.message.event.file.path }}"
          file.hash.md5: "{{ json_event.message.event.file.hashes.md5 }}"
          file.hash.sha1: "{{ json_event.message.event.file.hashes.sha1 }}"
          file.hash.sha256: "{{ json_event.message.event.file.hashes.sha256 }}"
          file.size: "{{ json_event.message.event.file.sizeBytes }}"
          file.owner: "{{ json_event.message.event.file.owner.name }}"
          file.uid: "{{ json_event.message.event.file.owner.sid }}"
          deepvisibility.file.location: "{{ json_event.message.event.file.fileLocation }}"
      - set:
          file.type: "dir"
        filter: '{{ json_event.message.event.file.isDir != "E_FALSE"  }}'
      - set:
          file.name: '{{json_event.message.event.file.path.split("\\") | last }}'
          file.extension: "{{json_event.message.event.file.path.split('.')|last}}"
        filter: '{{json_event.message.event.file != null and json_event.message.event.file.isDir == "E_FALSE"}}'
      - set:
          file.created: "{{convert_file_creation_time.start_date}}"
        filter: '{{ convert_file_creation_time != null }}'

  set_kernel_fields:
    actions:
      - set:
          deepvisibility.file.is_kernel_module: true
        filter: '{{ json_event.message.event.isKernelModule != "E_FALSE"  }}'
      - set:
          deepvisibility.file.is_kernel_module: false
        filter: '{{ json_event.message.event.isKernelModule == "E_FALSE"  }}'

  set_reg_value_fields:
    actions:
      - set:
          registry.path: "{{ json_event.message.event.regValue.path }}"
          registry.value: "{{ find_reg_value_key_name.key.name }}"
          # Sadly json doesn't support dict with int as keys so we have to convert them to string
          deepvisibility.registry.value_type: "{{json_event.message.event.valueType | string() }}"
          deepvisibility.registry.new.value_type: "{{json_event.message.event.newValueType | string() }}"
          deepvisibility.registry.old.value_type: "{{json_event.message.event.oldValueType | string() }}"
      - translate:
        dictionary:
          '0': 'REG_NONE'
          '1': 'REG_SZ'
          '2': 'REG_EXPAND_SZ'
          '3': 'REG_BINARY'
          '4': 'REG_DWORD'
          '5': 'REG_DWORD_BIG_ENDIAN'
          '6': 'REG_LINK'
          '7': 'REG_MULTI_SZ'
          '8': 'REG_RESOURCE_LIST'
          '9': 'REG_QWORD'
        mapping:
          deepvisibility.registry.old.value_type: deepvisibility.registry.old.data.type
          deepvisibility.registry.new.value_type: registry.data.type
          deepvisibility.registry.value_type: registry.data.type
      - set:
          registry.data.bytes: "{{ json_event.message.event.newValueData }}"
        filter: '{{ json_event.message.event.newValueData != null and json_event.message.event.newValueType in [0, 3]  }}'
      - set:
          registry.data.strings: [ "{{ json_event.message.event.newValueData | string() }}" ]
        filter: '{{ json_event.message.event.newValueData != null and json_event.message.event.newValueType not in [0, 3]  }}'
      - set:
          deepvisibility.registry.old.data.bytes: "{{ json_event.message.event.oldValueData }}"
        filter: '{{ json_event.message.event.oldValueData != null and json_event.message.event.oldValueType in [0, 3]  }}'
      - set:
          deepvisibility.registry.old.data.strings: [ "{{ json_event.message.event.oldValueData | string() }}" ]
        filter: '{{ json_event.message.event.oldValueData != null and json_event.message.event.oldValueType not in [0, 3]  }}'

  set_reg_key_fields:
    actions:
      - set:
          registry.path: "{{ json_event.message.event.regKey.path }}"
          registry.value: "{{ find_reg_key_name.key.name }}"
          deepvisibility.registry.import_path: "{{ json_event.message.event.importPath }}"
          deepvisibility.registry.export_path: "{{ json_event.message.event.exportPath }}"
          deepvisibility.registry.security_information: "{{json_event.message.event.securityInformation}}"
          deepvisibility.registry.old.key_name: "{{json_event.message.event.oldKeyName}}"
      - set:
          user.name: "{{json_event.message.event.owner.user.name}}"
          user.id: "{{json_event.message.event.owner.user.sid}}"
        filter: '{{ json_event.message.event.owner != null }}'

  set_script_fields:
    actions:
      - set:
          file.size: "{{ json_event.message.event.originalSize }}"
          deepvisibility.script.app_name: "{{ json_event.message.event.appName }}"
      - set:
          file.hash.md5: "{{ json_event.message.event.hashes.md5 }}"
          file.hash.sha1: "{{ json_event.message.event.hashes.sha1 }}"
          file.hash.sha256: "{{ json_event.message.event.hashes.sha256 }}"
        filter: "{{json_event.message.event.contentHash != null }}"

  set_http_fields:
    actions:
      - set:
          http.request.method: "{{ json_event.message.event.method }}"
          url.original: "{{ json_event.message.event.url}}"

  set_indicator_fields:
    actions:
      - set:
          deepvisibility.indicator.id: "{{ json_event.message.event.indicator }}"
          deepvisibility.indicator.name: "{{ json_event.message.event.friendlyName }}"
          deepvisibility.indicator.description: "{{ json_event.message.event.description }}"
          deepvisibility.indicator.long_description: "{{ json_event.message.event.long_description }}"
          deepvisibility.indicator.category: "{{ json_event.message.event.category }}"
          deepvisibility.indicator.classification: "{{ json_event.message.event.classification }}"
          deepvisibility.indicator.metadata: "{{ json_event.message.event.metadata }}"
          deepvisibility.indicator.tactics: "{{ json_event.message.event.tactics }}"


# TODO when ingest will be abble to manage lists, parse dns.answers.results with grok patern as follows :
# example from intake-formats/SentinelOne/deep_visibility/tests/event_dns.json
#
#  {
#   "dns": {
#     "answers": [
#       {
#         "name": "googlehosted.l.googleusercontent.com",
#         "type": "CNAME",
#         "data": "142.250.179.65"
#       }
#     ]
#   }
# }
