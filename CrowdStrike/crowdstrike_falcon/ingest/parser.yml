name: 'crowdstrike falcon edr'
pipeline:
  - name: parsed_event
    external:
      name: json.parse-json
      properties:
        input_field: '{{original.message}}'
        output_field: message
  - name: read_event_date
    external:
      name: date.parse
      properties:
        input_field: '{{parsed_event.message.metadata.eventCreationTime/1000}}'
        output_field: datetime
        format: timestamp
        timezone: UTC
  - name: set_event_date
  - name: detectionsummaryevent
    filter: '{{parsed_event.message.metadata.eventType == "DetectionSummaryEvent"}}'
  - name: useractivityauditevent
    filter: '{{parsed_event.message.metadata.eventType == "UserActivityAuditEvent"}}'
  - name: authactivityauditevent
    filter: '{{parsed_event.message.metadata.eventType == "AuthActivityAuditEvent"}}'
  - name: incidentsummaryevent
    filter: '{{parsed_event.message.metadata.eventType == "IncidentSummaryEvent"}}'
stages:
  set_event_date:
    actions:
      - set:
          '@timestamp': '{{read_event_date.datetime}}'
          crowdstrike.event_type: '{{parsed_event.message.metadata.eventType}}'
  detectionsummaryevent:
    actions:
      - set:
          host.ip: '{{parsed_event.message.event.LocalIP}}'
          agent.id: '{{parsed_event.message.event.AgentIdString}}'
          host.mac: '{{parsed_event.message.event.MACAddress}}'
          file.name: '{{parsed_event.message.event.FileName}}'
          file.path: '{{parsed_event.message.event.FilePath}}'
          host.name: '{{parsed_event.message.event.ComputerName}}'
          log.hostname: '{{parsed_event.message.event.ComputerName}}'
          user.name: '{{stage.message.event.UserName}}'
          event.kind: alert
          event.type: ['info']
          process.end: '{{stage.message.event.ProcessEndTime}}'
          process.pid: '{{parsed_event.message.event.ProcessId}}'
          file.hash.md5: '{{parsed_event.message.event.MD5String}}'
          file.hash.sha256: '{{parsed_event.message.event.SHA256String}}'
          process.start: '{{stage.message.event.ProcessStartTime}}'
          event.category: ['intrusion_detection']
          process.parent.pid: '{{parsed_event.message.event.ParentProcessId}}'
          threat.tactic.name: '{{parsed_event.message.event.Tactic}}'
          process.command_line: '{{parsed_event.message.event.CommandLine}}'
          crowdstrike.detect_id: '{{parsed_event.message.event.DetectId}}'
          threat.technique.name: '{{parsed_event.message.event.Technique}}'
          crowdstrike.customer_id: '{{parsed_event.message.event.CustomerIDString}}'
          process.parent.executable: '{{parsed_event.message.event.ParentImageFileName}}'
          process.parent.command_line: '{{parsed_event.message.event.ParentCommandLine}}'
          crowdstrike.detect_description: '{{parsed_event.message.event.DetectDescription}}'
        name: set
  useractivityauditevent:
    actions:
      - set:
          source.ip: '{{parsed_event.message.event.UserIp}}'
          event.kind: event
          event.type: ['change']
          service.name: '{{parsed_event.message.event.ServiceName}}'
          event.category: ['configuration']
          user.id: '{{parsed_event.message.event.UserId}}'
          crowdstrike.operation_name: '{{parsed_event.message.event.OperationName}}'
        name: set
  authactivityauditevent:
    actions:
      - set:
          source.ip: '{{parsed_event.message.event.UserIp}}'
          event.kind: event
          service.name: '{{parsed_event.message.event.ServiceName}}'
          user.id: '{{parsed_event.message.event.UserId}}'
          crowdstrike.operation_name: '{{parsed_event.message.event.OperationName}}'
        name: set
      - translate:
        dictionary:
          'streamStarted': ['session']
          'streamStopped': ['session']
        mapping:
          crowdstrike.operation_name: event.category
        fallback: ['configuration']
      - translate:
        dictionary:
          'streamStarted': ['start']
          'streamStopped': ['stop']
        mapping:
          crowdstrike.operation_name: event.type
        fallback: ['change']
  incidentsummaryevent:
    actions:
      - set:
          event.kind: alert
          event.type: ['info']
          event.category: ['intrusion_detection']
          crowdstrike.state: '{{parsed_event.message.event.State}}'
          crowdstrike.host_id: '{{parsed_event.message.event.HostID}}'
          crowdstrike.incident_id: '{{parsed_event.message.event.IncidentID}}'
          crowdstrike.incident_end: '{{parsed_event.message.event.IncidentEndTime}}'
          crowdstrike.incident_start: '{{parsed_event.message.event.IncidentStartTime}}'
        name: set
