name: sns
pipeline:
  - name: kv
    external:
      name: kv.parse-kv
      properties:
        input_field: '{{ original.message }}'
        output_field: result
        value_sep: '='
        item_sep: \s
  - name: stage2
  - name: translate-event-outcome

stages:
  stage2:
    actions:
      - set:
          event.kind: 'event'
          event.category: 'network'
          event.type: 'connection'
          '@timestamp': '{{ kv.result.time }}'
          observer.serial_number: '{{ kv.result.fw }}'
          event.timezone: '{{ kv.result.tz }}'
          event.start: '{{ kv.result.startime }}'
          event.risk_score: '{{ kv.result.pri }}'
          stormshield.confid: '{{ kv.result.confid }}'
          stormshield.slotlevel: '{{ kv.result.slotlevel }}'
          observer.ingress.interface.name: '{{ kv.result.srcif }}'
          observer.ingress.interface.alias: '{{ kv.result.srcifname }}'
          network.transport: '{{ kv.result.ipproto }}'
          source.ip: '{{ kv.result.src }}'
          source.port: '{{ kv.result.srcport }}'
          stormshield.srcportname: '{{ kv.result.srcportname }}'
          source.mac: '{{ kv.result.srcmac }}'
          source.geo.continent_name: '{{ kv.result.srccontinent }}'
          source.geo.country_iso_code: '{{ kv.result.srccountry }}'
          stormshield.scirep: '{{ kv.result.scirep }}'
          destination.ip: '{{ kv.result.dst }}'
          destination.port: '{{ kv.result.dstport }}'
          stormshield.dstportname: '{{ kv.result.dstportname }}'
          destination.geo.continent_name: '{{ kv.result.dstcontinent }}'
          destination.geo.country_iso_code: '{{ kv.result.dstcountry }}'
          observer.egress.interface.name: '{{ kv.result.dstif }}'
          observer.egress.interface.alias: '{{ kv.result.dstifname }}'
          stormshield.dstname: '{{ kv.result.dstname }}'
          host.network.ingress.bytes: '{{ kv.result.rcvd }}'
          host.network.egress.bytes: '{{ kv.result.sent }}'
          network.bytes: '{{ kv.result.sent + kv.result.rcvd }}'
          # Duration of the connection in seconds converted in nanoseconds.
          event.duration: '{{ kv.result.duration | float * 1000000000 }}'
          stormshield.logtype: '{{ stormshield.logtype }}'
          network.protocol: '{{ kv.result.proto }}'
          network.type: '{{ kv.result.ipv }}'
          rule.id: '{{ kv.result.ruleid }}'
          stormshield.filter.action: '{{ kv.result.action }}'
          rule.category: '{{ kv.result.slotlevel }}'

  translate-event-outcome:
    actions:
      - translate:
        dictionary:
          "pass": 'success'
          "block": 'failure'
        mapping:
          stormshield.filter.action: event.outcome
        fallback: 'unknown'